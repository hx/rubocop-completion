[
  {
    "version": "0.66.0",
    "diff": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "RuboCop configuration schema",
      "description": "Schema for RuboCop configuration files (e.g. .rubocop.yml), intended for helping IDEs provide autocompletion and validation.",
      "type": "object",
      "additionalProperties": false,
      "definitions": {
        "inherit_mode": {
          "type": "object",
          "minProperties": 1,
          "propertyNames": {
            "enum": [
              "merge",
              "override"
            ]
          },
          "additionalProperties": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          }
        },
        "listOfFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "type": "string",
          "enum": [
            "info",
            "refactor",
            "convention",
            "warning",
            "error",
            "fatal"
          ]
        },
        "stringOrStrings": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "attributeName": {
          "type": "string",
          "pattern": "^[A-Z][A-Za-z]*$"
        }
      },
      "properties": {
        "inherit_from": {
          "type": "string"
        },
        "inherit_gem": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/stringOrStrings"
          }
        },
        "require": {
          "$ref": "#/definitions/stringOrStrings"
        },
        "inherit_mode": {
          "$ref": "#/definitions/inherit_mode"
        },
        "Bundler/DuplicatedGem": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemfile, **/Gemfile, **/gems.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for duplicate gem entries in Gemfile."
        },
        "Bundler/GemComment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemfile, **/Gemfile, **/gems.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Add a comment describing each gem."
        },
        "Bundler/InsecureProtocolSource": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemfile, **/Gemfile, **/gems.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "The source `:gemcutter`, `:rubygems` and `:rubyforge` are deprecated because HTTP requests are insecure. Please change your source to 'https://rubygems.org' if possible, or 'http://rubygems.org' if not."
        },
        "Bundler/OrderedGems": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemfile, **/Gemfile, **/gems.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "TreatCommentsAsGroupSeparators": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Gems within groups in the Gemfile should be alphabetically sorted."
        },
        "Gemspec/DuplicatedAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemspec"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "An attribute assignment method calls should be listed only once in a gemspec."
        },
        "Gemspec/OrderedDependencies": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemspec"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "TreatCommentsAsGroupSeparators": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Dependencies in the gemspec should be alphabetically sorted."
        },
        "Gemspec/RequiredRubyVersion": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemspec"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that `required_ruby_version` of gemspec and `TargetRubyVersion` of .rubocop.yml are equal."
        },
        "Layout/AccessModifierIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: indent"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: outdent, indent"
            },
            "IndentationWidth": {
            }
          },
          "description": "Check indentation of private/protected visibility modifiers."
        },
        "Layout/AlignArray": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Align the elements of an array literal if they span more than one line."
        },
        "Layout/AlignHash": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedHashRocketStyle": {
              "type": "string",
              "description": "Default: key"
            },
            "SupportedHashRocketStyles": {
              "type": "array",
              "description": "Default: key, separator, table"
            },
            "EnforcedColonStyle": {
              "type": "string",
              "description": "Default: key"
            },
            "SupportedColonStyles": {
              "type": "array",
              "description": "Default: key, separator, table"
            },
            "EnforcedLastArgumentHashStyle": {
              "type": "string",
              "description": "Default: always_inspect"
            },
            "SupportedLastArgumentHashStyles": {
              "type": "array",
              "description": "Default: always_inspect, always_ignore, ignore_implicit, ignore_explicit"
            }
          },
          "description": "Align the elements of a hash literal if they span more than one line."
        },
        "Layout/AlignParameters": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: with_first_parameter"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: with_first_parameter, with_fixed_indentation"
            },
            "IndentationWidth": {
            }
          },
          "description": "Align the parameters of a method call if they span more than one line."
        },
        "Layout/BlockAlignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleAlignWith": {
              "type": "string",
              "description": "Default: either"
            },
            "SupportedStylesAlignWith": {
              "type": "array",
              "description": "Default: either, start_of_block, start_of_line"
            }
          },
          "description": "Align block ends correctly."
        },
        "Layout/BlockEndNewline": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Put end statement of multiline block on its own line."
        },
        "Layout/CaseIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: case"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: case, end"
            },
            "IndentOneStep": {
              "type": "boolean",
              "description": "Default: false"
            },
            "IndentationWidth": {
            }
          },
          "description": "Indentation of when in a case/when/[else/]end."
        },
        "Layout/ClassStructure": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Categories": {
              "description": "Default: {\"module_inclusion\"=>[\"include\", \"prepend\", \"extend\"]}"
            },
            "ExpectedOrder": {
              "type": "array",
              "description": "Default: module_inclusion, constants, public_class_methods, initializer, public_methods, protected_methods, private_methods"
            }
          },
          "description": "Enforces a configured order of definitions within a class body."
        },
        "Layout/ClosingHeredocIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks the indentation of here document closings."
        },
        "Layout/ClosingParenthesisIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks the indentation of hanging closing parentheses."
        },
        "Layout/CommentIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Indentation of comments."
        },
        "Layout/ConditionPosition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for condition placed in a confusing position relative to the keyword."
        },
        "Layout/DefEndAlignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity",
              "description": "Default: warning"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleAlignWith": {
              "type": "string",
              "description": "Default: start_of_line"
            },
            "SupportedStylesAlignWith": {
              "type": "array",
              "description": "Default: start_of_line, def"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Align ends corresponding to defs correctly."
        },
        "Layout/DotPosition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: leading"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: leading, trailing"
            }
          },
          "description": "Checks the position of the dot in multi-line method calls."
        },
        "Layout/ElseAlignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Align elses and elsifs correctly."
        },
        "Layout/EmptyComment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowBorderComment": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowMarginComment": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Checks empty comment."
        },
        "Layout/EmptyLineAfterGuardClause": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Add empty line after guard clause."
        },
        "Layout/EmptyLineAfterMagicComment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Add an empty line after magic comments to separate them from code."
        },
        "Layout/EmptyLineBetweenDefs": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowAdjacentOneLineDefs": {
              "type": "boolean",
              "description": "Default: false"
            },
            "NumberOfEmptyLines": {
              "type": "integer",
              "description": "Default: 1"
            }
          },
          "description": "Use empty lines between defs."
        },
        "Layout/EmptyLines": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Don't use several empty lines in a row."
        },
        "Layout/EmptyLinesAroundAccessModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Keep blank lines around access modifiers."
        },
        "Layout/EmptyLinesAroundArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Keeps track of empty lines around method arguments."
        },
        "Layout/EmptyLinesAroundBeginBody": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Keeps track of empty lines around begin-end bodies."
        },
        "Layout/EmptyLinesAroundBlockBody": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_empty_lines"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: empty_lines, no_empty_lines"
            }
          },
          "description": "Keeps track of empty lines around block bodies."
        },
        "Layout/EmptyLinesAroundClassBody": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_empty_lines"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: empty_lines, empty_lines_except_namespace, empty_lines_special, no_empty_lines, beginning_only, ending_only"
            }
          },
          "description": "Keeps track of empty lines around class bodies."
        },
        "Layout/EmptyLinesAroundExceptionHandlingKeywords": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Keeps track of empty lines around exception handling keywords."
        },
        "Layout/EmptyLinesAroundMethodBody": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Keeps track of empty lines around method bodies."
        },
        "Layout/EmptyLinesAroundModuleBody": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_empty_lines"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: empty_lines, empty_lines_except_namespace, empty_lines_special, no_empty_lines"
            }
          },
          "description": "Keeps track of empty lines around module bodies."
        },
        "Layout/EndAlignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity",
              "description": "Default: warning"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleAlignWith": {
              "type": "string",
              "description": "Default: keyword"
            },
            "SupportedStylesAlignWith": {
              "type": "array",
              "description": "Default: keyword, variable, start_of_line"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Align ends correctly."
        },
        "Layout/EndOfLine": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: native"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: native, lf, crlf"
            }
          },
          "description": "Use Unix-style line endings."
        },
        "Layout/ExtraSpacing": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowForAlignment": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowBeforeTrailingComments": {
              "type": "boolean",
              "description": "Default: false"
            },
            "ForceEqualSignAlignment": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Do not use unnecessary spacing."
        },
        "Layout/FirstArrayElementLineBreak": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for a line break before the first element in a multi-line array."
        },
        "Layout/FirstHashElementLineBreak": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for a line break before the first element in a multi-line hash."
        },
        "Layout/FirstMethodArgumentLineBreak": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for a line break before the first argument in a multi-line method call."
        },
        "Layout/FirstMethodParameterLineBreak": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for a line break before the first parameter in a multi-line method parameter definition."
        },
        "Layout/FirstParameterIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_for_inner_method_call_in_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: consistent, consistent_relative_to_receiver, special_for_inner_method_call, special_for_inner_method_call_in_parentheses"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first parameter in a method call."
        },
        "Layout/IndentArray": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_inside_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: special_inside_parentheses, consistent, align_brackets"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first element in an array literal."
        },
        "Layout/IndentAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first line of the right-hand-side of a multi-line assignment."
        },
        "Layout/IndentHash": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_inside_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: special_inside_parentheses, consistent, align_braces"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first key in a hash literal."
        },
        "Layout/IndentHeredoc": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: auto_detection"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: auto_detection, squiggly, active_support, powerpack, unindent"
            }
          },
          "description": "This cop checks the indentation of the here document bodies."
        },
        "Layout/IndentationConsistency": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: normal"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: normal, rails"
            }
          },
          "description": "Keep indentation straight."
        },
        "Layout/IndentationWidth": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Width": {
              "type": "integer",
              "description": "Default: 2"
            },
            "IgnoredPatterns": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Use 2 spaces for indentation."
        },
        "Layout/InitialIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks the indentation of the first non-blank non-comment line in a file."
        },
        "Layout/LeadingBlankLines": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for unnecessary blank lines at the beginning of a file."
        },
        "Layout/LeadingCommentSpace": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Comments should start with a space."
        },
        "Layout/MultilineArrayBraceLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: symmetrical"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: symmetrical, new_line, same_line"
            }
          },
          "description": "Checks that the closing brace in an array literal is either on the same line as the last array element, or a new line."
        },
        "Layout/MultilineAssignmentLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SupportedTypes": {
              "type": "array",
              "description": "Default: block, case, class, if, kwbegin, module"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: new_line"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: same_line, new_line"
            }
          },
          "description": "Check for a newline after the assignment operator in multi-line assignments."
        },
        "Layout/MultilineBlockLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Ensures newlines after multiline block do statements."
        },
        "Layout/MultilineHashBraceLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: symmetrical"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: symmetrical, new_line, same_line"
            }
          },
          "description": "Checks that the closing brace in a hash literal is either on the same line as the last hash element, or a new line."
        },
        "Layout/MultilineMethodCallBraceLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: symmetrical"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: symmetrical, new_line, same_line"
            }
          },
          "description": "Checks that the closing brace in a method call is either on the same line as the last method argument, or a new line."
        },
        "Layout/MultilineMethodCallIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: aligned"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: aligned, indented, indented_relative_to_receiver"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks indentation of method calls with the dot operator that span more than one line."
        },
        "Layout/MultilineMethodDefinitionBraceLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: symmetrical"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: symmetrical, new_line, same_line"
            }
          },
          "description": "Checks that the closing brace in a method definition is either on the same line as the last method parameter, or a new line."
        },
        "Layout/MultilineOperationIndentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: aligned"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: aligned, indented"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks indentation of binary operations that span more than one line."
        },
        "Layout/RescueEnsureAlignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Align rescues and ensures correctly."
        },
        "Layout/SpaceAfterColon": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use spaces after colons."
        },
        "Layout/SpaceAfterComma": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use spaces after commas."
        },
        "Layout/SpaceAfterMethodName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not put a space between a method name and the opening parenthesis in a method definition."
        },
        "Layout/SpaceAfterNot": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Tracks redundant space after the ! operator."
        },
        "Layout/SpaceAfterSemicolon": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use spaces after semicolons."
        },
        "Layout/SpaceAroundBlockParameters": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleInsidePipes": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStylesInsidePipes": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Checks the spacing inside and after block parameters pipes."
        },
        "Layout/SpaceAroundEqualsInParameterDefault": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Checks that the equals signs in parameter default assignments have or don't have surrounding space depending on configuration."
        },
        "Layout/SpaceAroundKeyword": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use a space around keywords if appropriate."
        },
        "Layout/SpaceAroundOperators": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowForAlignment": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Use a single space around operators."
        },
        "Layout/SpaceBeforeBlockBraces": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space"
            },
            "EnforcedStyleForEmptyBraces": {
              "type": "string",
              "description": "Default: space"
            },
            "SupportedStylesForEmptyBraces": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Checks that the left block brace has or doesn't have space before it."
        },
        "Layout/SpaceBeforeComma": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "No spaces before commas."
        },
        "Layout/SpaceBeforeComment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for missing space between code and a comment on the same line."
        },
        "Layout/SpaceBeforeFirstArg": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowForAlignment": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Checks that exactly one space is used between a method name and the first argument for method calls without parentheses."
        },
        "Layout/SpaceBeforeSemicolon": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "No spaces before semicolons."
        },
        "Layout/SpaceInLambdaLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: require_no_space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: require_no_space, require_space"
            }
          },
          "description": "Checks for spaces in lambda literals."
        },
        "Layout/SpaceInsideArrayLiteralBrackets": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space, compact"
            },
            "EnforcedStyleForEmptyBrackets": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStylesForEmptyBrackets": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Checks the spacing inside array literal brackets."
        },
        "Layout/SpaceInsideArrayPercentLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "No unnecessary additional spaces between elements in %i/%w literals."
        },
        "Layout/SpaceInsideBlockBraces": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space"
            },
            "EnforcedStyleForEmptyBraces": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStylesForEmptyBraces": {
              "type": "array",
              "description": "Default: space, no_space"
            },
            "SpaceBeforeBlockParameters": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Checks that block braces have or don't have surrounding space. For blocks taking parameters, checks that the left brace has or doesn't have trailing space."
        },
        "Layout/SpaceInsideHashLiteralBraces": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space, compact"
            },
            "EnforcedStyleForEmptyBraces": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStylesForEmptyBraces": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Use spaces inside hash literal braces - or don't."
        },
        "Layout/SpaceInsideParens": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "No spaces after ( or before )."
        },
        "Layout/SpaceInsidePercentLiteralDelimiters": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "No unnecessary spaces inside delimiters of %i/%w/%x literals."
        },
        "Layout/SpaceInsideRangeLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "No spaces inside range literals."
        },
        "Layout/SpaceInsideReferenceBrackets": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space"
            },
            "EnforcedStyleForEmptyBrackets": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStylesForEmptyBrackets": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Checks the spacing inside referential brackets."
        },
        "Layout/SpaceInsideStringInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_space"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: space, no_space"
            }
          },
          "description": "Checks for padding/surrounding spaces inside string interpolation."
        },
        "Layout/Tab": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IndentationWidth": {
            }
          },
          "description": "No hard tabs."
        },
        "Layout/TrailingBlankLines": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: final_newline"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: final_newline, final_blank_line"
            }
          },
          "description": "Checks trailing blank lines and final newline."
        },
        "Layout/TrailingWhitespace": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowInHeredoc": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Avoid trailing whitespace."
        },
        "Lint/AmbiguousBlockAssociation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for ambiguous block association with method when param passed without parentheses."
        },
        "Lint/AmbiguousOperator": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for ambiguous operators in the first argument of a method invocation without parentheses."
        },
        "Lint/AmbiguousRegexpLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for ambiguous regexp literals in the first argument of a method invocation without parentheses."
        },
        "Lint/AssignmentInCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowSafeAssignment": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Don't use assignment in conditions."
        },
        "Lint/BigDecimalNew": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "`BigDecimal.new()` is deprecated. Use `BigDecimal()` instead."
        },
        "Lint/BooleanSymbol": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for `:true` and `:false` symbols."
        },
        "Lint/CircularArgumentReference": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Default values in optional keyword arguments and optional ordinal arguments should not refer back to the name of the argument."
        },
        "Lint/Debugger": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for debugger calls."
        },
        "Lint/DeprecatedClassMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for deprecated class method calls."
        },
        "Lint/DisjunctiveAssignmentInConstructor": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "In constructor, plain assignment is preferred over disjunctive."
        },
        "Lint/DuplicateCaseCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not repeat values in case conditionals."
        },
        "Lint/DuplicateMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for duplicate method definitions."
        },
        "Lint/DuplicatedKey": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for duplicate keys in hash literals."
        },
        "Lint/EachWithObjectArgument": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for immutable argument given to each_with_object."
        },
        "Lint/ElseLayout": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for odd code arrangement in an else block."
        },
        "Lint/EmptyEnsure": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks for empty ensure block."
        },
        "Lint/EmptyExpression": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for empty expressions."
        },
        "Lint/EmptyInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for empty string interpolation."
        },
        "Lint/EmptyWhen": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for `when` branches with empty bodies."
        },
        "Lint/EndInMethod": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "END blocks should not be placed inside method definitions."
        },
        "Lint/EnsureReturn": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use return in an ensure block."
        },
        "Lint/ErbNewArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `:trim_mode` and `:eoutvar` keyword arguments to `ERB.new`."
        },
        "Lint/FlipFlop": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for flip-flops"
        },
        "Lint/FloatOutOfRange": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Catches floating-point literals too large or small for Ruby to represent."
        },
        "Lint/FormatParameterMismatch": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "The number of parameters to format/sprint must match the fields."
        },
        "Lint/HandleExceptions": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Don't suppress exception."
        },
        "Lint/ImplicitStringConcatenation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for adjacent string literals on the same line, which could better be represented as a single string literal."
        },
        "Lint/IneffectiveAccessModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for attempts to use `private` or `protected` to set the visibility of a class method, which does not work."
        },
        "Lint/InheritException": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: runtime_error"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: runtime_error, standard_error"
            }
          },
          "description": "Avoid inheriting from the `Exception` class."
        },
        "Lint/InterpolationCheck": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Raise warning for interpolation in single q strs"
        },
        "Lint/LiteralAsCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks of literals used in conditions."
        },
        "Lint/LiteralInInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for literals used in interpolation."
        },
        "Lint/Loop": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use Kernel#loop with break rather than begin/end/until or begin/end/while for post-loop tests."
        },
        "Lint/MissingCopEnableDirective": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "MaximumRangeSize": {
              "enum": [
                "number"
              ],
              "description": "Default: Infinity"
            }
          },
          "description": "Checks for a `# rubocop:enable` after `# rubocop:disable`"
        },
        "Lint/MultipleCompare": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `&&` operator to compare multiple value."
        },
        "Lint/NestedMethodDefinition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use nested method definitions."
        },
        "Lint/NestedPercentLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for nested percent literals."
        },
        "Lint/NextWithoutAccumulator": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not omit the accumulator when calling `next` in a `reduce`/`inject` block."
        },
        "Lint/NonLocalExitFromIterator": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use return in iterator to cause non-local exit."
        },
        "Lint/NumberConversion": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks unsafe usage of number conversion methods."
        },
        "Lint/OrderedMagicComments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks the proper ordering of magic comments and whether a magic comment is not placed before a shebang."
        },
        "Lint/ParenthesesAsGroupedExpression": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for method calls with a space before the opening parenthesis."
        },
        "Lint/PercentStringArray": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for unwanted commas and quotes in %w/%W literals."
        },
        "Lint/PercentSymbolArray": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for unwanted commas and colons in %i/%I literals."
        },
        "Lint/RandOne": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for `rand(1)` calls. Such calls always return `0` and most likely a mistake."
        },
        "Lint/RedundantWithIndex": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for redundant `with_index`."
        },
        "Lint/RedundantWithObject": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for redundant `with_object`."
        },
        "Lint/RegexpAsCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use regexp literal as a condition. The regexp literal matches `$_` implicitly."
        },
        "Lint/RequireParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use parentheses in the method call to avoid confusion about precedence."
        },
        "Lint/RescueException": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid rescuing the Exception class."
        },
        "Lint/RescueType": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid rescuing from non constants that could result in a `TypeError`."
        },
        "Lint/ReturnInVoidContext": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for return in void context."
        },
        "Lint/SafeNavigationChain": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: present?, blank?, presence, try, try!"
            }
          },
          "description": "Do not chain ordinary method call after safe navigation operator."
        },
        "Lint/SafeNavigationConsistency": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: present?, blank?, presence, try, try!"
            }
          },
          "description": "Check to make sure that if safe navigation is used for a method call in an `&&` or `||` condition that safe navigation is used for all method calls on that same object."
        },
        "Lint/SafeNavigationWithEmpty": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid `foo&.empty?` in conditionals."
        },
        "Lint/ScriptPermission": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Grant script file execute permission."
        },
        "Lint/ShadowedArgument": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IgnoreImplicitReferences": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Avoid reassigning arguments before they were used."
        },
        "Lint/ShadowedException": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid rescuing a higher level exception before a lower level exception."
        },
        "Lint/ShadowingOuterLocalVariable": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use the same name as outer local variable for block arguments or block local variables."
        },
        "Lint/StringConversionInInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for Object#to_s usage in string interpolation."
        },
        "Lint/Syntax": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks syntax error"
        },
        "Lint/ToJSON": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Ensure #to_json includes an optional argument."
        },
        "Lint/UnderscorePrefixedVariableName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use prefix `_` for a variable that is used."
        },
        "Lint/UnifiedInteger": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use Integer instead of Fixnum or Bignum"
        },
        "Lint/UnneededCopDisableDirective": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for rubocop:disable comments that can be removed. Note: this cop is not disabled when disabling all cops. It must be explicitly disabled."
        },
        "Lint/UnneededCopEnableDirective": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for rubocop:enable comments that can be removed."
        },
        "Lint/UnneededRequireStatement": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for unnecessary `require` statement."
        },
        "Lint/UnneededSplatExpansion": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for splat unnecessarily being called on literals"
        },
        "Lint/UnreachableCode": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Unreachable code."
        },
        "Lint/UnusedBlockArgument": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IgnoreEmptyBlocks": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowUnusedKeywordArguments": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks for unused block arguments."
        },
        "Lint/UnusedMethodArgument": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowUnusedKeywordArguments": {
              "type": "boolean",
              "description": "Default: false"
            },
            "IgnoreEmptyMethods": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Checks for unused method arguments."
        },
        "Lint/UriEscapeUnescape": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "`URI.escape` method is obsolete and should not be used. Instead, use `CGI.escape`, `URI.encode_www_form` or `URI.encode_www_form_component` depending on your specific use case. Also `URI.unescape` method is obsolete and should not be used. Instead, use `CGI.unescape`, `URI.decode_www_form` or `URI.decode_www_form_component` depending on your specific use case."
        },
        "Lint/UriRegexp": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `URI::DEFAULT_PARSER.make_regexp` instead of `URI.regexp`."
        },
        "Lint/UselessAccessModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "ContextCreatingMethods": {
              "type": "array",
              "description": "Default: "
            },
            "MethodCreatingMethods": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Checks for useless access modifiers."
        },
        "Lint/UselessAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for useless assignment to a local variable."
        },
        "Lint/UselessComparison": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for comparison of something with itself."
        },
        "Lint/UselessElseWithoutRescue": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for useless `else` in `begin..end` without `rescue`."
        },
        "Lint/UselessSetterCall": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for useless setter call to a local variable."
        },
        "Lint/Void": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "CheckForMethodsWithNoSideEffects": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Possible use of operator/literal/variable in void context."
        },
        "Metrics/AbcSize": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "array",
              "description": "Default: http://c2.com/cgi/wiki?AbcMetric, https://en.wikipedia.org/wiki/ABC_Software_Metric'"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 15"
            }
          },
          "description": "A calculated magnitude based on number of assignments, branches, and conditions."
        },
        "Metrics/BlockLength": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/*.gemspec"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "CountComments": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 25"
            },
            "ExcludedMethods": {
              "type": "array",
              "description": "Default: refine"
            }
          },
          "description": "Avoid long blocks with many lines."
        },
        "Metrics/BlockNesting": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "CountBlocks": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 3"
            }
          },
          "description": "Avoid excessive block nesting"
        },
        "Metrics/ClassLength": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "CountComments": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 100"
            }
          },
          "description": "Avoid classes longer than 100 lines of code."
        },
        "Metrics/CyclomaticComplexity": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 6"
            }
          },
          "description": "A complexity metric that is strongly correlated to the number of test cases needed to validate a method."
        },
        "Metrics/LineLength": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 80"
            },
            "AllowHeredoc": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowURI": {
              "type": "boolean",
              "description": "Default: true"
            },
            "URISchemes": {
              "type": "array",
              "description": "Default: http, https"
            },
            "IgnoreCopDirectives": {
              "type": "boolean",
              "description": "Default: false"
            },
            "IgnoredPatterns": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Limit lines to 80 characters."
        },
        "Metrics/MethodLength": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "CountComments": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 10"
            },
            "ExcludedMethods": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Avoid methods longer than 10 lines of code."
        },
        "Metrics/ModuleLength": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "CountComments": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 100"
            }
          },
          "description": "Avoid modules longer than 100 lines of code."
        },
        "Metrics/ParameterLists": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 5"
            },
            "CountKeywordArgs": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Avoid parameter lists longer than three or four parameters."
        },
        "Metrics/PerceivedComplexity": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Max": {
              "type": "integer",
              "description": "Default: 7"
            }
          },
          "description": "A complexity metric geared towards measuring complexity for a human reader."
        },
        "Naming/AccessorMethodName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check the naming of accessor methods for get_/set_."
        },
        "Naming/AsciiIdentifiers": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use only ascii symbols in identifiers."
        },
        "Naming/BinaryOperatorParameterName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "When defining binary operators, name the argument other."
        },
        "Naming/ClassAndModuleCamelCase": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use CamelCase for classes and modules."
        },
        "Naming/ConstantName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Constants should use SCREAMING_SNAKE_CASE."
        },
        "Naming/FileName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: "
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "ExpectMatchingDefinition": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Regex": {
            },
            "IgnoreExecutableScripts": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowedAcronyms": {
              "type": "array",
              "description": "Default: CLI, DSL, ACL, API, ASCII, CPU, CSS, DNS, EOF, GUID, HTML, HTTP, HTTPS, ID, IP, JSON, LHS, QPS, RAM, RHS, RPC, SLA, SMTP, SQL, SSH, TCP, TLS, TTL, UDP, UI, UID, UUID, URI, URL, UTF8, VM, XML, XMPP, XSRF, XSS"
            }
          },
          "description": "Use snake_case for source file names."
        },
        "Naming/HeredocDelimiterCase": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: uppercase"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: lowercase, uppercase"
            }
          },
          "description": "Use configured case for heredoc delimiters."
        },
        "Naming/HeredocDelimiterNaming": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Blacklist": {
              "type": "array",
              "description": "Default: (?-mix:(^|\\s)(EO[A-Z]{1}|END)(\\s|$))"
            }
          },
          "description": "Use descriptive heredoc delimiters."
        },
        "Naming/MemoizedInstanceVariableName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleForLeadingUnderscores": {
              "type": "string",
              "description": "Default: disallowed"
            },
            "SupportedStylesForLeadingUnderscores": {
              "type": "array",
              "description": "Default: disallowed, required, optional"
            }
          },
          "description": "Memoized method name should match memo instance variable name."
        },
        "Naming/MethodName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: snake_case"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: snake_case, camelCase"
            }
          },
          "description": "Use the configured style when naming methods."
        },
        "Naming/PredicateName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: spec/**/*"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "NamePrefix": {
              "type": "array",
              "description": "Default: is_, has_, have_"
            },
            "NamePrefixBlacklist": {
              "type": "array",
              "description": "Default: is_, has_, have_"
            },
            "NameWhitelist": {
              "type": "array",
              "description": "Default: is_a?"
            },
            "MethodDefinitionMacros": {
              "type": "array",
              "description": "Default: define_method, define_singleton_method"
            }
          },
          "description": "Check the names of predicate methods."
        },
        "Naming/UncommunicativeBlockParamName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "MinNameLength": {
              "type": "integer",
              "description": "Default: 1"
            },
            "AllowNamesEndingInNumbers": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowedNames": {
              "type": "array",
              "description": "Default: "
            },
            "ForbiddenNames": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Checks for block parameter names that contain capital letters, end in numbers, or do not meet a minimal length."
        },
        "Naming/UncommunicativeMethodParamName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "MinNameLength": {
              "type": "integer",
              "description": "Default: 3"
            },
            "AllowNamesEndingInNumbers": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowedNames": {
              "type": "array",
              "description": "Default: io, id, to, by, on, in, at, ip, db"
            },
            "ForbiddenNames": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Checks for method parameter names that contain capital letters, end in numbers, or do not meet a minimal length."
        },
        "Naming/VariableName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: snake_case"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: snake_case, camelCase"
            }
          },
          "description": "Use the configured style when naming variables."
        },
        "Naming/VariableNumber": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: normalcase"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: snake_case, normalcase, non_integer"
            }
          },
          "description": "Use the configured style when numbering variables."
        },
        "Performance/Caller": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `caller(n..n)` instead of `caller`."
        },
        "Performance/CaseWhenSplat": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Reordering `when` conditions with a splat to the end of the `when` branches can improve performance."
        },
        "Performance/Casecmp": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#stringcasecmp-vs-stringdowncase---code"
            }
          },
          "description": "Use `casecmp` rather than `downcase ==`, `upcase ==`, `== downcase`, or `== upcase`.."
        },
        "Performance/ChainArrayAllocation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://twitter.com/schneems/status/1034123879978029057"
            }
          },
          "description": "Instead of chaining array methods that allocate new arrays, mutate an existing array."
        },
        "Performance/CompareWithBlock": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `sort_by(&:foo)` instead of `sort { |a, b| a.foo <=> b.foo }`."
        },
        "Performance/Count": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeMode": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Use `count` instead of `select...size`, `reject...size`, `select...count`, `reject...count`, `select...length`, and `reject...length`."
        },
        "Performance/Detect": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#enumerabledetect-vs-enumerableselectfirst-code"
            },
            "SafeMode": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Use `detect` instead of `select.first`, `find_all.first`, `select.last`, and `find_all.last`."
        },
        "Performance/DoubleStartEndWith": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IncludeActiveSupportAliases": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `str.{start,end}_with?(x, ..., y, ...)` instead of `str.{start,end}_with?(x, ...) || str.{start,end}_with?(y, ...)`."
        },
        "Performance/EndWith": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `end_with?` instead of a regex match anchored to the end of a string."
        },
        "Performance/FixedSize": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not compute the size of statically sized objects except in constants"
        },
        "Performance/FlatMap": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#enumerablemaparrayflatten-vs-enumerableflat_map-code"
            },
            "EnabledForFlattenWithoutParams": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `Enumerable#flat_map` instead of `Enumerable#map...Array#flatten(1)` or `Enumberable#collect..Array#flatten(1)`"
        },
        "Performance/InefficientHashSearch": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#hashkey-instead-of-hashkeysinclude-code"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `key?` or `value?` instead of `keys.include?` or `values.include?`"
        },
        "Performance/LstripRstrip": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `strip` instead of `lstrip.rstrip`."
        },
        "Performance/OpenStruct": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `Struct` instead of `OpenStruct`."
        },
        "Performance/RangeInclude": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#cover-vs-include-code"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `Range#cover?` instead of `Range#include?`."
        },
        "Performance/RedundantBlockCall": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#proccall-and-block-arguments-vs-yieldcode"
            }
          },
          "description": "Use `yield` instead of `block.call`."
        },
        "Performance/RedundantMatch": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `=~` instead of `String#match` or `Regexp#match` in a context where the returned `MatchData` is not needed."
        },
        "Performance/RedundantMerge": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#hashmerge-vs-hash-code"
            },
            "MaxKeyValuePairs": {
              "type": "integer",
              "description": "Default: 2"
            }
          },
          "description": "Use Hash#[]=, rather than Hash#merge! with a single key-value pair."
        },
        "Performance/RedundantSortBy": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `sort` instead of `sort_by { |x| x }`."
        },
        "Performance/RegexpMatch": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#regexp-vs-stringmatch-vs-string-vs-stringmatch-code-"
            }
          },
          "description": "Use `match?` instead of `Regexp#match`, `String#match`, `Symbol#match`, `Regexp#===`, or `=~` when `MatchData` is not used."
        },
        "Performance/ReverseEach": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#enumerablereverseeach-vs-enumerablereverse_each-code"
            }
          },
          "description": "Use `reverse_each` instead of `reverse.each`."
        },
        "Performance/Sample": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code"
            }
          },
          "description": "Use `sample` instead of `shuffle.first`, `shuffle.last`, and `shuffle[Integer]`."
        },
        "Performance/Size": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#arraylength-vs-arraysize-vs-arraycount-code"
            }
          },
          "description": "Use `size` instead of `count` for counting the number of elements in `Array` and `Hash`."
        },
        "Performance/StartWith": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `start_with?` instead of a regex match anchored to the beginning of a string."
        },
        "Performance/StringReplacement": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#stringgsub-vs-stringtr-code"
            }
          },
          "description": "Use `tr` instead of `gsub` when you are replacing the same number of characters. Use `delete` instead of `gsub` when you are deleting characters."
        },
        "Performance/TimesMap": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks for .times.map calls."
        },
        "Performance/UnfreezeString": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use unary plus to get an unfrozen string literal."
        },
        "Performance/UnneededSort": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `min` instead of `sort.first`, `max_by` instead of `sort_by...last`, etc."
        },
        "Performance/UriDefaultParser": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `URI::DEFAULT_PARSER` instead of `URI::Parser.new`."
        },
        "Rails": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          }
        },
        "Rails/ActionFilter": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/controllers/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: action"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: action, filter"
            }
          },
          "description": "Enforces consistent use of action filter methods."
        },
        "Rails/ActiveRecordAliases": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid Active Record aliases: Use `update` instead of `update_attributes`. Use `update!` instead of `update_attributes!`."
        },
        "Rails/ActiveSupportAliases": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid ActiveSupport aliases of standard ruby methods: `String#starts_with?`, `String#ends_with?`, `Array#append`, `Array#prepend`."
        },
        "Rails/ApplicationJob": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check that jobs subclass ApplicationJob."
        },
        "Rails/ApplicationRecord": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check that models subclass ApplicationRecord."
        },
        "Rails/AssertNot": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/test/**/*"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `assert_not` instead of `assert !`."
        },
        "Rails/BelongsTo": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `optional: true` instead of `required: false` for `belongs_to` relations'"
        },
        "Rails/Blank": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "NilOrEmpty": {
              "type": "boolean",
              "description": "Default: true"
            },
            "NotPresent": {
              "type": "boolean",
              "description": "Default: true"
            },
            "UnlessPresent": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Enforces use of `blank?`."
        },
        "Rails/BulkChangeTable": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: db/migrate/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Database": {
            },
            "SupportedDatabases": {
              "type": "array",
              "description": "Default: mysql, postgresql"
            }
          },
          "description": "Check whether alter queries are combinable."
        },
        "Rails/CreateTableWithTimestamps": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: db/migrate/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks the migration for which timestamps are not included when creating a new table."
        },
        "Rails/Date": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: flexible"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: strict, flexible"
            }
          },
          "description": "Checks the correct usage of date aware methods, such as Date.today, Date.current etc."
        },
        "Rails/Delegate": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforceForPrefixed": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Prefer delegate method for delegations."
        },
        "Rails/DelegateAllowBlank": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use allow_blank as an option to delegate."
        },
        "Rails/DynamicFindBy": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: find_by_sql"
            }
          },
          "description": "Use `find_by` instead of dynamic `find_by_*`."
        },
        "Rails/EnumUniqueness": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid duplicate integers in hash-syntax `enum` declaration."
        },
        "Rails/EnvironmentComparison": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor `Rails.env.production?` over `Rails.env == 'production'`"
        },
        "Rails/Exit": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: lib/**/*.rake"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/**/*.rb, config/**/*.rb, lib/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor `fail`, `break`, `return`, etc. over `exit` in application or library code outside of Rake files to avoid exits during unit testing or running in production."
        },
        "Rails/FilePath": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: arguments"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: slashes, arguments"
            }
          },
          "description": "Use `Rails.root.join` for file path joining."
        },
        "Rails/FindBy": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer find_by over where.first."
        },
        "Rails/FindEach": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer all.find_each over all.find."
        },
        "Rails/HasAndBelongsToMany": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer has_many :through to has_and_belongs_to_many."
        },
        "Rails/HasManyOrHasOneDependent": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Define the dependent option to the has_many and has_one associations."
        },
        "Rails/HttpPositionalArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: spec/**/*, test/**/*"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use keyword arguments instead of positional arguments in http method calls."
        },
        "Rails/HttpStatus": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: symbolic"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: numeric, symbolic"
            }
          },
          "description": "Enforces use of symbolic or numeric value to define HTTP status."
        },
        "Rails/IgnoredSkipActionFilterOption": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/controllers/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://api.rubyonrails.org/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options"
            }
          },
          "description": "Checks that `if` and `only` (or `except`) are not used together as options of `skip_*` action filter."
        },
        "Rails/InverseOf": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for associations where the inverse cannot be determined automatically."
        },
        "Rails/LexicallyScopedActionFilter": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/controllers/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that methods specified in the filter's `only` or `except` options are explicitly defined in the controller."
        },
        "Rails/LinkToBlank": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://mathiasbynens.github.io/rel-noopener/"
            }
          },
          "description": "Checks that `link_to` with a `target: \"_blank\"` have a `rel: \"noopener\"` option passed to them."
        },
        "Rails/NotNullColumn": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: db/migrate/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not add a NOT NULL column without a default value"
        },
        "Rails/Output": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/**/*.rb, config/**/*.rb, db/**/*.rb, lib/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for calls to puts, print, etc."
        },
        "Rails/OutputSafety": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "The use of `html_safe` or `raw` may be a security risk."
        },
        "Rails/PluralizationGrammar": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for incorrect grammar when using methods like `3.day.ago`."
        },
        "Rails/Presence": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks code that can be written more easily using `Object#presence` defined by Active Support."
        },
        "Rails/Present": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "NotNilAndNotEmpty": {
              "type": "boolean",
              "description": "Default: true"
            },
            "NotBlank": {
              "type": "boolean",
              "description": "Default: true"
            },
            "UnlessBlank": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Enforces use of `present?`."
        },
        "Rails/ReadWriteAttribute": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for read_attribute(:attr) and write_attribute(:attr, val)."
        },
        "Rails/RedundantReceiverInWithOptions": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for redundant receiver in `with_options`."
        },
        "Rails/ReflectionClassName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use a string for `class_name` option value in the definition of a reflection."
        },
        "Rails/RefuteMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/test/**/*"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `assert_not` methods instead of `refute` methods."
        },
        "Rails/RelativeDateConstant": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Do not assign relative date to constants."
        },
        "Rails/RequestReferer": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: referer"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: referer, referrer"
            }
          },
          "description": "Use consistent syntax for request.referer."
        },
        "Rails/ReversibleMigration": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: db/migrate/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://api.rubyonrails.org/classes/ActiveRecord/Migration/CommandRecorder.html"
            }
          },
          "description": "Checks whether the change method of the migration file is reversible."
        },
        "Rails/SafeNavigation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "ConvertTry": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use Ruby's safe navigation operator (`&.`) instead of `try!`"
        },
        "Rails/SaveBang": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowImplicitReturn": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowedReceivers": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Identifies possible cases where Active Record save! or related should be used."
        },
        "Rails/ScopeArgs": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks the arguments of ActiveRecord scopes."
        },
        "Rails/SkipsModelValidations": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://guides.rubyonrails.org/active_record_validations.html#skipping-validations"
            },
            "Blacklist": {
              "type": "array",
              "description": "Default: decrement!, decrement_counter, increment!, increment_counter, toggle!, touch, update_all, update_attribute, update_column, update_columns, update_counters"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Use methods that skips model validations with caution. See reference for more information."
        },
        "Rails/TimeZone": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: http://danilenko.org/2012/7/6/rails_timezones"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: flexible"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: strict, flexible"
            }
          },
          "description": "Checks the correct usage of time zone aware methods."
        },
        "Rails/UniqBeforePluck": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: conservative"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: conservative, aggressive"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Prefer the use of uniq or distinct before pluck."
        },
        "Rails/UnknownEnv": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Environments": {
              "type": "array",
              "description": "Default: development, test, production"
            }
          },
          "description": "Use correct environment name."
        },
        "Rails/Validation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use validates :attribute, hash of validations."
        },
        "Security/Eval": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "The use of eval represents a serious security risk."
        },
        "Security/JSONLoad": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://ruby-doc.org/stdlib-2.3.0/libdoc/json/rdoc/JSON.html#method-i-load"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Prefer usage of `JSON.parse` over `JSON.load` due to potential security issues. See reference for more information."
        },
        "Security/MarshalLoad": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://ruby-doc.org/core-2.3.3/Marshal.html#module-Marshal-label-Security+considerations"
            }
          },
          "description": "Avoid using of `Marshal.load` or `Marshal.restore` due to potential security issues. See reference for more information."
        },
        "Security/Open": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "The use of Kernel#open represents a serious security risk."
        },
        "Security/YAMLLoad": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://ruby-doc.org/stdlib-2.3.3/libdoc/yaml/rdoc/YAML.html#module-YAML-label-Security"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Prefer usage of `YAML.safe_load` over `YAML.load` due to potential security issues. See reference for more information."
        },
        "Style/AccessModifierDeclarations": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: group"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: inline, group"
            }
          },
          "description": "Checks style of how access modifiers are used."
        },
        "Style/Alias": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: prefer_alias"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: prefer_alias, prefer_alias_method"
            }
          },
          "description": "Use alias instead of alias_method."
        },
        "Style/AndOr": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: always"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: always, conditionals"
            }
          },
          "description": "Use &&/|| instead of and/or."
        },
        "Style/ArrayJoin": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use Array#join instead of Array#*."
        },
        "Style/AsciiComments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowedChars": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Use only ascii symbols in comments."
        },
        "Style/Attr": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for uses of Module#attr."
        },
        "Style/AutoResourceCleanup": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Suggests the usage of an auto resource cleanup version of a method (if available)."
        },
        "Style/BarePercentLiterals": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: bare_percent"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: percent_q, bare_percent"
            }
          },
          "description": "Checks if usage of %() or %Q() matches configuration."
        },
        "Style/BeginBlock": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid the use of BEGIN blocks."
        },
        "Style/BlockComments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use block comments."
        },
        "Style/BlockDelimiters": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: line_count_based"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: line_count_based, semantic, braces_for_chaining"
            },
            "ProceduralMethods": {
              "type": "array",
              "description": "Default: benchmark, bm, bmbm, create, each_with_object, measure, new, realtime, tap, with_object"
            },
            "FunctionalMethods": {
              "type": "array",
              "description": "Default: let, let!, subject, watch"
            },
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: lambda, proc, it"
            },
            "AllowBracesOnProceduralOneLiners": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Avoid using {...} for multi-line blocks (multiline chaining is always ugly). Prefer {...} over do...end for single-line blocks."
        },
        "Style/BracesAroundHashParameters": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: no_braces"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: braces, no_braces, context_dependent"
            }
          },
          "description": "Enforce braces style around hash parameters."
        },
        "Style/CaseEquality": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid explicit use of the case equality operator(===)."
        },
        "Style/CharacterLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for uses of character literals."
        },
        "Style/ClassAndModuleChildren": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: nested"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: nested, compact"
            }
          },
          "description": "Checks style of children classes and modules."
        },
        "Style/ClassCheck": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: is_a?"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: is_a?, kind_of?"
            }
          },
          "description": "Enforces consistent use of `Object#is_a?` or `Object#kind_of?`."
        },
        "Style/ClassMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use self when defining module/class methods."
        },
        "Style/ClassVars": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid the use of class variables."
        },
        "Style/CollectionMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            },
            "PreferredMethods": {
              "description": "Default: {\"collect\"=>\"map\", \"collect!\"=>\"map!\", \"inject\"=>\"reduce\", \"detect\"=>\"find\", \"find_all\"=>\"select\"}"
            }
          },
          "description": "Preferred collection methods."
        },
        "Style/ColonMethodCall": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use :: for method call."
        },
        "Style/ColonMethodDefinition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use :: for defining class methods."
        },
        "Style/CommandLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: backticks"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: backticks, percent_x, mixed"
            },
            "AllowInnerBackticks": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use `` or %x around command literals."
        },
        "Style/CommentAnnotation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Keywords": {
              "type": "array",
              "description": "Default: TODO, FIXME, OPTIMIZE, HACK, REVIEW"
            }
          },
          "description": "Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW)."
        },
        "Style/CommentedKeyword": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not place comments on the same line as certain keywords."
        },
        "Style/ConditionalAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: assign_to_condition"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: assign_to_condition, assign_inside_condition"
            },
            "SingleLineConditionsOnly": {
              "type": "boolean",
              "description": "Default: true"
            },
            "IncludeTernaryExpressions": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Use the return value of `if` and `case` statements for assignment to a variable and variable comparison instead of assigning that variable inside of each branch."
        },
        "Style/ConstantVisibility": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check that class- and module constants have visibility declarations."
        },
        "Style/Copyright": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Notice": {
              "type": "string",
              "description": "Default: ^Copyright (\\(c\\) )?2[0-9]{3} .+"
            },
            "AutocorrectNotice": {
              "type": "string",
              "description": "Default: "
            }
          },
          "description": "Include a copyright notice in each file before any code."
        },
        "Style/DateTime": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowCoercion": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use Time over DateTime."
        },
        "Style/DefWithParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use def with parentheses when there are arguments."
        },
        "Style/Dir": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use the `__dir__` method to retrieve the canonicalized absolute path to the current file."
        },
        "Style/Documentation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: spec/**/*, test/**/*"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Document classes and non-namespace modules."
        },
        "Style/DocumentationMethod": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: spec/**/*, test/**/*"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "RequireForNonPublicMethods": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks for missing documentation comment for public methods."
        },
        "Style/DoubleNegation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for uses of double negation (!!)."
        },
        "Style/EachForSimpleLoop": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `Integer#times` for a simple loop which iterates a fixed number of times."
        },
        "Style/EachWithObject": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer `each_with_object` over `inject` or `reduce`."
        },
        "Style/EmptyBlockParameter": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Omit pipes for empty block parameters."
        },
        "Style/EmptyCaseCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid empty condition in case statements."
        },
        "Style/EmptyElse": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: both"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: empty, nil, both"
            }
          },
          "description": "Avoid empty else-clauses."
        },
        "Style/EmptyLambdaParameter": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Omit parens for empty lambda parameters."
        },
        "Style/EmptyLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer literals to Array.new/Hash.new/String.new."
        },
        "Style/EmptyMethod": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: compact"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: compact, expanded"
            }
          },
          "description": "Checks the formatting of empty method definitions."
        },
        "Style/Encoding": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use UTF-8 as the source file encoding."
        },
        "Style/EndBlock": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid the use of END blocks."
        },
        "Style/EvalWithLocation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Pass `__FILE__` and `__LINE__` to `eval` method, as they are used by backtraces."
        },
        "Style/EvenOdd": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor the use of Integer#even? && Integer#odd?"
        },
        "Style/ExpandPathArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `expand_path(__dir__)` instead of `expand_path('..', __FILE__)`."
        },
        "Style/For": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: each"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: each, for"
            }
          },
          "description": "Checks use of for or each in multiline loops."
        },
        "Style/FormatString": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: format"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: format, sprintf, percent"
            }
          },
          "description": "Enforce the use of Kernel#sprintf, Kernel#format or String#%."
        },
        "Style/FormatStringToken": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: annotated"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: annotated, template, unannotated"
            }
          },
          "description": "Use a consistent style for format string tokens."
        },
        "Style/FrozenStringLiteralComment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: when_needed"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: when_needed, always, never"
            }
          },
          "description": "Add the frozen_string_literal comment to the top of files to help transition to frozen string literals by default."
        },
        "Style/GlobalVars": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://www.zenspider.com/ruby/quickref.html"
            },
            "AllowedVariables": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Do not introduce global variables."
        },
        "Style/GuardClause": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "MinBodyLength": {
              "type": "integer",
              "description": "Default: 1"
            }
          },
          "description": "Check for conditionals that can be replaced with guard clauses"
        },
        "Style/HashSyntax": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: ruby19"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: ruby19, hash_rockets, no_mixed_keys, ruby19_no_mixed_keys"
            },
            "UseHashRocketsWithSymbolValues": {
              "type": "boolean",
              "description": "Default: false"
            },
            "PreferHashRocketsForNonAlnumEndingSymbols": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax { :a => 1, :b => 2 }."
        },
        "Style/IdenticalConditionalBranches": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that conditional statements do not have an identical line at the end of each branch, which can validly be moved out of the conditional."
        },
        "Style/IfInsideElse": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Finds if nodes inside else, which can be converted to elsif."
        },
        "Style/IfUnlessModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor modifier if/unless usage when you have a single-line body."
        },
        "Style/IfUnlessModifierOfIfUnless": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid modifier if/unless usage on conditionals."
        },
        "Style/IfWithSemicolon": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use if x; .... Use the ternary operator instead."
        },
        "Style/ImplicitRuntimeError": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `raise` or `fail` with an explicit exception class and message, rather than just a message."
        },
        "Style/InfiniteLoop": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Use Kernel#loop for infinite loops."
        },
        "Style/InlineComment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid trailing inline comments."
        },
        "Style/InverseMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            },
            "InverseMethods": {
              "description": "Default: {:any?=>:none?, :even?=>:odd?, :===>:!=, :=~=>:!~, :<=>:>=, :>=>:<=}"
            },
            "InverseBlocks": {
              "description": "Default: {:select=>:reject, :select!=>:reject!}"
            }
          },
          "description": "Use the inverse method instead of `!.method` if an inverse method is defined."
        },
        "Style/IpAddresses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: ::"
            }
          },
          "description": "Don't include literal IP addresses in code."
        },
        "Style/Lambda": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: line_count_dependent"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: line_count_dependent, lambda, literal"
            }
          },
          "description": "Use the new lambda literal syntax for single-line blocks."
        },
        "Style/LambdaCall": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: call"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: call, braces"
            }
          },
          "description": "Use lambda.call(...) instead of lambda.(...)."
        },
        "Style/LineEndConcatenation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use \\ instead of + or << to concatenate two string literals at line end."
        },
        "Style/MethodCallWithArgsParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IgnoreMacros": {
              "type": "boolean",
              "description": "Default: true"
            },
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: "
            },
            "AllowParenthesesInMultilineCall": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AllowParenthesesInChaining": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AllowParenthesesInCamelCaseMethod": {
              "type": "boolean",
              "description": "Default: false"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: require_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: require_parentheses, omit_parentheses"
            }
          },
          "description": "Use parentheses for method calls with arguments."
        },
        "Style/MethodCallWithoutArgsParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Do not use parentheses for method calls with no arguments."
        },
        "Style/MethodCalledOnDoEndBlock": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid chaining a method call on a do...end block."
        },
        "Style/MethodDefParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: require_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: require_parentheses, require_no_parentheses, require_no_parentheses_except_multiline"
            }
          },
          "description": "Checks if the method definitions have or don't have parentheses."
        },
        "Style/MethodMissingSuper": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for `method_missing` to call `super`."
        },
        "Style/MinMax": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `Enumerable#minmax` instead of `Enumerable#min` and `Enumerable#max` in conjunction.'"
        },
        "Style/MissingElse": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: both"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: if, case, both"
            }
          },
          "description": "Require if/case expressions to have an else branches. If enabled, it is recommended that Style/UnlessElse and Style/EmptyElse be enabled. This will conflict with Style/EmptyElse if Style/EmptyElse is configured to style \"both\""
        },
        "Style/MissingRespondToMissing": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks if `method_missing` is implemented without implementing `respond_to_missing`."
        },
        "Style/MixinGrouping": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: separated"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: separated, grouped"
            }
          },
          "description": "Checks for grouping of mixins in `class` and `module` bodies."
        },
        "Style/MixinUsage": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that `include`, `extend` and `prepend` exists at the top level."
        },
        "Style/ModuleFunction": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: module_function"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: module_function, extend_self"
            },
            "Autocorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks for usage of `extend self` in modules."
        },
        "Style/MultilineBlockChain": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid multi-line chains of blocks."
        },
        "Style/MultilineIfModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Only use if/unless modifiers on single line statements."
        },
        "Style/MultilineIfThen": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use then for multi-line if/unless."
        },
        "Style/MultilineMemoization": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: keyword"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: keyword, braces"
            }
          },
          "description": "Wrap multiline memoizations in a `begin` and `end` block."
        },
        "Style/MultilineMethodSignature": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid multi-line method signatures."
        },
        "Style/MultilineTernaryOperator": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid multi-line ?: (the ternary operator); use if/unless instead."
        },
        "Style/MultipleComparison": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid comparing a variable with multiple items in a conditional, use Array#include? instead."
        },
        "Style/MutableConstant": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: literals"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: literals, strict"
            }
          },
          "description": "Do not assign mutable objects to constants."
        },
        "Style/NegatedIf": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: both"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: both, prefix, postfix"
            }
          },
          "description": "Favor unless over if for negative conditions (or control flow or)."
        },
        "Style/NegatedWhile": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor until over while for negative conditions."
        },
        "Style/NestedModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid using nested modifiers."
        },
        "Style/NestedParenthesizedCalls": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: be, be_a, be_an, be_between, be_falsey, be_kind_of, be_instance_of, be_truthy, be_within, eq, eql, end_with, include, match, raise_error, respond_to, start_with"
            }
          },
          "description": "Parenthesize method calls which are nested inside the argument list of another parenthesized method call."
        },
        "Style/NestedTernaryOperator": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use one expression per branch in a ternary operator."
        },
        "Style/Next": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: skip_modifier_ifs"
            },
            "MinBodyLength": {
              "type": "integer",
              "description": "Default: 3"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: skip_modifier_ifs, always"
            }
          },
          "description": "Use `next` to skip iteration instead of a condition at the end."
        },
        "Style/NilComparison": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: predicate"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: predicate, comparison"
            }
          },
          "description": "Prefer x.nil? to x == nil."
        },
        "Style/NonNilCheck": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IncludeSemanticChanges": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks for redundant nil checks."
        },
        "Style/Not": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use ! instead of not."
        },
        "Style/NumericLiteralPrefix": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedOctalStyle": {
              "type": "string",
              "description": "Default: zero_with_o"
            },
            "SupportedOctalStyles": {
              "type": "array",
              "description": "Default: zero_with_o, zero_only"
            }
          },
          "description": "Use smallcase prefixes for numeric literals."
        },
        "Style/NumericLiterals": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "MinDigits": {
              "type": "integer",
              "description": "Default: 5"
            },
            "Strict": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Add underscores to large numeric literals to improve their readability."
        },
        "Style/NumericPredicate": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: spec/**/*"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: predicate"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: predicate, comparison"
            },
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: "
            }
          },
          "description": "Checks for the use of predicate- or comparison methods for numeric comparisons."
        },
        "Style/OneLineConditional": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor the ternary operator(?:) over if/then/else/end constructs."
        },
        "Style/OptionHash": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SuspiciousParamNames": {
              "type": "array",
              "description": "Default: options, opts, args, params, parameters"
            }
          },
          "description": "Don't use option hashes when you can use keyword arguments."
        },
        "Style/OptionalArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for optional arguments that do not appear at the end of the argument list"
        },
        "Style/OrAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Recommend usage of double pipe equals (||=) where applicable."
        },
        "Style/ParallelAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for simple usages of parallel assignment. It will only warn when the number of variables matches on both sides of the assignment."
        },
        "Style/ParenthesesAroundCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowSafeAssignment": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowInMultilineConditions": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Don't use parentheses around the condition of an if/unless/while."
        },
        "Style/PercentLiteralDelimiters": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "PreferredDelimiters": {
              "description": "Default: {\"default\"=>\"()\", \"%i\"=>\"[]\", \"%I\"=>\"[]\", \"%r\"=>\"{}\", \"%w\"=>\"[]\", \"%W\"=>\"[]\"}"
            }
          },
          "description": "Use `%`-literal delimiters consistently"
        },
        "Style/PercentQLiterals": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: lower_case_q"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: lower_case_q, upper_case_q"
            }
          },
          "description": "Checks if uses of %Q/%q match the configured preference."
        },
        "Style/PerlBackrefs": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid Perl-style regex back references."
        },
        "Style/PreferredHashMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: short"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: short, verbose"
            }
          },
          "description": "Checks use of `has_key?` and `has_value?` Hash methods."
        },
        "Style/Proc": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use proc instead of Proc.new."
        },
        "Style/RaiseArgs": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: exploded"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: compact, exploded"
            }
          },
          "description": "Checks the arguments passed to raise/fail."
        },
        "Style/RandomWithOffset": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer to use ranges when generating random numbers instead of integers with offsets."
        },
        "Style/RedundantBegin": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Don't use begin blocks when they are not needed."
        },
        "Style/RedundantConditional": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Don't return true/false from a conditional."
        },
        "Style/RedundantException": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for an obsolete RuntimeException argument in raise/fail."
        },
        "Style/RedundantFreeze": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks usages of Object#freeze on immutable objects."
        },
        "Style/RedundantParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for parentheses that seem not to serve any purpose."
        },
        "Style/RedundantReturn": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowMultipleReturnValues": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Don't use return where it's not required."
        },
        "Style/RedundantSelf": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Don't use self where it's not needed."
        },
        "Style/RegexpLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: slashes"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: slashes, percent_r, mixed"
            },
            "AllowInnerSlashes": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use / or %r around regular expressions."
        },
        "Style/RescueModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Avoid using rescue in its modifier form."
        },
        "Style/RescueStandardError": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: explicit"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: implicit, explicit"
            }
          },
          "description": "Avoid rescuing without specifying an error class."
        },
        "Style/ReturnNil": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: return"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: return, return_nil"
            }
          },
          "description": "Use return instead of return nil."
        },
        "Style/SafeNavigation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "ConvertCodeThatCanStartToReturnNil": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: present?, blank?, presence, try, try!"
            }
          },
          "description": "This cop transforms usages of a method call safeguarded by a check for the existence of the object to safe navigation (`&.`)."
        },
        "Style/SelfAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for places where self-assignment shorthand should have been used."
        },
        "Style/Semicolon": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowAsExpressionSeparator": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Don't use semicolons to terminate expressions."
        },
        "Style/Send": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer `Object#__send__` or `Object#public_send` to `send`, as `send` may overlap with existing methods."
        },
        "Style/SignalException": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: only_raise"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: only_raise, only_fail, semantic"
            }
          },
          "description": "Checks for proper usage of fail and raise."
        },
        "Style/SingleLineBlockParams": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Methods": {
              "type": "array",
              "description": "Default: {\"reduce\"=>[\"acc\", \"elem\"]}, {\"inject\"=>[\"acc\", \"elem\"]}"
            }
          },
          "description": "Enforces the names of some block params."
        },
        "Style/SingleLineMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowIfMethodIsEmpty": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Avoid single-line methods."
        },
        "Style/SpecialGlobalVars": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: use_english_names"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: use_perl_names, use_english_names"
            }
          },
          "description": "Avoid Perl-style global variables."
        },
        "Style/StabbyLambdaParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: require_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: require_parentheses, require_no_parentheses"
            }
          },
          "description": "Check for the usage of parentheses around stabby lambda arguments."
        },
        "Style/StderrPuts": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `warn` instead of `$stderr.puts`."
        },
        "Style/StringHashKeys": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer symbols instead of strings as hash keys."
        },
        "Style/StringLiterals": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: single_quotes"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: single_quotes, double_quotes"
            },
            "ConsistentQuotesInMultiline": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks if uses of quotes match the configured preference."
        },
        "Style/StringLiteralsInInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: single_quotes"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: single_quotes, double_quotes"
            }
          },
          "description": "Checks if uses of quotes inside expressions in interpolated strings match the configured preference."
        },
        "Style/StringMethods": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "PreferredMethods": {
              "description": "Default: {\"intern\"=>\"to_sym\"}"
            }
          },
          "description": "Checks if configured preferred methods are used over non-preferred."
        },
        "Style/StructInheritance": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for inheritance from Struct.new."
        },
        "Style/SymbolArray": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: percent"
            },
            "MinSize": {
              "type": "integer",
              "description": "Default: 2"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: percent, brackets"
            }
          },
          "description": "Use %i or %I for arrays of symbols."
        },
        "Style/SymbolLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use plain symbols instead of string symbols when possible."
        },
        "Style/SymbolProc": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            },
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: respond_to, define_method"
            }
          },
          "description": "Use symbols as procs instead of blocks when possible."
        },
        "Style/TernaryParentheses": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: require_no_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: require_parentheses, require_no_parentheses, require_parentheses_when_complex"
            },
            "AllowSafeAssignment": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Checks for use of parentheses around ternary conditions."
        },
        "Style/TrailingBodyOnClass": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Class body goes below class statement."
        },
        "Style/TrailingBodyOnMethodDefinition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Method body goes below definition."
        },
        "Style/TrailingBodyOnModule": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Module body goes below module statement."
        },
        "Style/TrailingCommaInArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleForMultiline": {
              "type": "string",
              "description": "Default: no_comma"
            },
            "SupportedStylesForMultiline": {
              "type": "array",
              "description": "Default: comma, consistent_comma, no_comma"
            }
          },
          "description": "Checks for trailing comma in argument lists."
        },
        "Style/TrailingCommaInArrayLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleForMultiline": {
              "type": "string",
              "description": "Default: no_comma"
            },
            "SupportedStylesForMultiline": {
              "type": "array",
              "description": "Default: comma, consistent_comma, no_comma"
            }
          },
          "description": "Checks for trailing comma in array literals."
        },
        "Style/TrailingCommaInHashLiteral": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyleForMultiline": {
              "type": "string",
              "description": "Default: no_comma"
            },
            "SupportedStylesForMultiline": {
              "type": "array",
              "description": "Default: comma, consistent_comma, no_comma"
            }
          },
          "description": "Checks for trailing comma in hash literals."
        },
        "Style/TrailingMethodEndStatement": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for trailing end statement on line of method body."
        },
        "Style/TrailingUnderscoreVariable": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowNamedUnderscoreVariables": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "Checks for the usage of unneeded trailing underscores at the end of parallel variable assignment."
        },
        "Style/TrivialAccessors": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "ExactNameMatch": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowPredicates": {
              "type": "boolean",
              "description": "Default: true"
            },
            "AllowDSLWriters": {
              "type": "boolean",
              "description": "Default: false"
            },
            "IgnoreClassMethods": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Whitelist": {
              "type": "array",
              "description": "Default: to_ary, to_a, to_c, to_enum, to_h, to_hash, to_i, to_int, to_io, to_open, to_path, to_proc, to_r, to_regexp, to_str, to_s, to_sym"
            }
          },
          "description": "Prefer attr_* methods to trivial readers/writers."
        },
        "Style/UnlessElse": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use unless with else. Rewrite these with the positive case first."
        },
        "Style/UnneededCapitalW": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for %W when interpolation is not needed."
        },
        "Style/UnneededCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for unnecessary conditional expressions."
        },
        "Style/UnneededInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for strings that are just an interpolated expression."
        },
        "Style/UnneededPercentQ": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for %q/%Q when single quotes or double quotes would do."
        },
        "Style/UnpackFirst": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for accessing the first element of `String#unpack` instead of using `unpack1`"
        },
        "Style/VariableInterpolation": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Don't interpolate global, instance and class variables directly in strings."
        },
        "Style/WhenThen": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use when x then ... for one-line cases."
        },
        "Style/WhileUntilDo": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for redundant do after while or until."
        },
        "Style/WhileUntilModifier": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Favor modifier while/until usage when you have a single-line body."
        },
        "Style/WordArray": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: percent"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: percent, brackets"
            },
            "MinSize": {
              "type": "integer",
              "description": "Default: 2"
            },
            "WordRegex": {
              "description": "Default: (?-mix:\\A[\\p{Word}\\n\\t]+\\z)"
            }
          },
          "description": "Use %w or %W for arrays of words."
        },
        "Style/YodaCondition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://en.wikipedia.org/wiki/Yoda_conditions"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: forbid_for_all_comparison_operators"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: forbid_for_all_comparison_operators, forbid_for_equality_operators_only, require_for_all_comparison_operators, require_for_equality_operators_only"
            }
          },
          "description": "Forbid or enforce yoda conditions."
        },
        "Style/ZeroLengthPredicate": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Use #empty? when testing for objects of length 0."
        }
      }
    }
  },
  {
    "version": "0.67.0",
    "diff": {
      "properties": {
        "Performance/LstripRstrip": null,
        "Performance/RedundantSortBy": null,
        "Performance/Sample": null,
        "Performance/UnneededSort": null,
        "Layout/MultilineArrayLineBreaks": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that each item in a multi-line array literal starts on a separate line."
        },
        "Layout/MultilineHashKeyLineBreaks": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that each item in a multi-line hash literal starts on a separate line."
        },
        "Layout/MultilineMethodArgumentLineBreaks": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks that each argument in a multi-line method call starts on a separate line."
        },
        "Naming/RescuedExceptionsVariableName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "PreferredName": {
              "type": "string",
              "description": "Default: ex"
            }
          },
          "description": "Use consistent rescued exceptions variables naming."
        },
        "Rails/ActiveRecordOverride": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check for overriding Active Record methods instead of using callbacks."
        },
        "Rails/LexicallyScopedActionFilter": {
          "properties": {
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/RedundantAllowNil": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Finds redundant use of `allow_nil` when `allow_blank` is set to certain values in model validations."
        },
        "Style/MethodCallWithArgsParentheses": {
          "properties": {
            "IncludedMacros": {
              "type": "array",
              "description": "Default: "
            }
          }
        },
        "Style/RedundantSortBy": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `sort` instead of `sort_by { |x| x }`."
        },
        "Style/Sample": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code"
            }
          },
          "description": "Use `sample` instead of `shuffle.first`, `shuffle.last`, and `shuffle[Integer]`."
        },
        "Style/Strip": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `strip` instead of `lstrip.rstrip`."
        },
        "Style/UnneededSort": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Use `min` instead of `sort.first`, `max_by` instead of `sort_by...last`, etc."
        }
      }
    }
  },
  {
    "version": "0.67.1",
    "diff": {
      "properties": {
        "Naming/RescuedExceptionsVariableName": {
          "properties": {
            "PreferredName": {
              "description": "Default: e"
            }
          }
        }
      }
    }
  },
  {
    "version": "0.67.2",
    "diff": {
    }
  },
  {
    "version": "0.68.0",
    "diff": {
      "properties": {
        "Layout/FirstParameterIndentation": null,
        "Layout/IndentArray": null,
        "Layout/IndentHash": null,
        "Performance/Caller": null,
        "Performance/CaseWhenSplat": null,
        "Performance/Casecmp": null,
        "Performance/ChainArrayAllocation": null,
        "Performance/CompareWithBlock": null,
        "Performance/Count": null,
        "Performance/Detect": null,
        "Performance/DoubleStartEndWith": null,
        "Performance/EndWith": null,
        "Performance/FixedSize": null,
        "Performance/FlatMap": null,
        "Performance/InefficientHashSearch": null,
        "Performance/OpenStruct": null,
        "Performance/RangeInclude": null,
        "Performance/RedundantBlockCall": null,
        "Performance/RedundantMatch": null,
        "Performance/RedundantMerge": null,
        "Performance/RegexpMatch": null,
        "Performance/ReverseEach": null,
        "Performance/Size": null,
        "Performance/StartWith": null,
        "Performance/StringReplacement": null,
        "Performance/TimesMap": null,
        "Performance/UnfreezeString": null,
        "Performance/UriDefaultParser": null,
        "Layout/AlignArguments": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: with_first_argument"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: with_first_argument, with_fixed_indentation"
            },
            "IndentationWidth": {
            }
          },
          "description": "Align the arguments of a method call if they span more than one line."
        },
        "Layout/AlignParameters": {
          "description": "Align the parameters of a method definition if they span more than one line."
        },
        "Layout/HeredocArgumentClosingParenthesis": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for the placement of the closing parenthesis in a method call that passes a HEREDOC string as an argument."
        },
        "Layout/IndentFirstArgument": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_for_inner_method_call_in_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: consistent, consistent_relative_to_receiver, special_for_inner_method_call, special_for_inner_method_call_in_parentheses"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first argument in a method call."
        },
        "Layout/IndentFirstArrayElement": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_inside_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: special_inside_parentheses, consistent, align_brackets"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first element in an array literal."
        },
        "Layout/IndentFirstHashElement": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_inside_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: special_inside_parentheses, consistent, align_braces"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first key in a hash literal."
        },
        "Layout/IndentFirstParameter": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: special_for_inner_method_call_in_parentheses"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: consistent, align_parentheses"
            },
            "IndentationWidth": {
            }
          },
          "description": "Checks the indentation of the first parameter in a method definition."
        },
        "Lint/HeredocMethodCallPosition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Checks for the ordering of a method call where the receiver of the call is a HEREDOC."
        },
        "Lint/UnderscorePrefixedVariableName": {
          "properties": {
            "AllowKeywordBlockArguments": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Metrics/LineLength": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/TimeZone": {
          "properties": {
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Style/BlockDelimiters": {
          "properties": {
            "SupportedStyles": {
              "description": "Default: line_count_based, semantic, braces_for_chaining, always_braces"
            }
          }
        }
      }
    }
  },
  {
    "version": "0.68.1",
    "diff": {
      "properties": {
        "Layout/IndentFirstParameter": {
          "properties": {
            "EnforcedStyle": {
              "description": "Default: consistent"
            }
          }
        }
      }
    }
  },
  {
    "version": "0.69.0",
    "diff": {
      "properties": {
        "Layout/IndentHeredoc": {
          "properties": {
            "EnforcedStyle": {
              "description": "Default: squiggly"
            },
            "SupportedStyles": {
              "description": "Default: squiggly, active_support, powerpack, unindent"
            }
          }
        },
        "Rails/LinkToBlank": {
          "properties": {
            "Reference": {
              "type": "array",
              "description": "Default: https://mathiasbynens.github.io/rel-noopener/, https://html.spec.whatwg.org/multipage/links.html#link-type-noopener, https://html.spec.whatwg.org/multipage/links.html#link-type-noreferrer"
            }
          }
        },
        "Style/FrozenStringLiteralComment": {
          "properties": {
            "EnforcedStyle": {
              "description": "Default: always"
            },
            "SupportedStyles": {
              "description": "Default: always, never"
            }
          }
        },
        "Style/NegatedUnless": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: both"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: both, prefix, postfix"
            }
          },
          "description": "Favor if over unless for negative conditions."
        }
      }
    }
  },
  {
    "version": "2.0.0",
    "diff": {
      "properties": {
        "Bundler/DuplicatedGem": null,
        "Bundler/GemComment": null,
        "Bundler/InsecureProtocolSource": null,
        "Bundler/OrderedGems": null,
        "Gemspec/DuplicatedAssignment": null,
        "Gemspec/OrderedDependencies": null,
        "Gemspec/RequiredRubyVersion": null,
        "Layout/AccessModifierIndentation": null,
        "Layout/AlignArguments": null,
        "Layout/AlignArray": null,
        "Layout/AlignHash": null,
        "Layout/AlignParameters": null,
        "Layout/BlockAlignment": null,
        "Layout/BlockEndNewline": null,
        "Layout/CaseIndentation": null,
        "Layout/ClassStructure": null,
        "Layout/ClosingHeredocIndentation": null,
        "Layout/ClosingParenthesisIndentation": null,
        "Layout/CommentIndentation": null,
        "Layout/ConditionPosition": null,
        "Layout/DefEndAlignment": null,
        "Layout/DotPosition": null,
        "Layout/ElseAlignment": null,
        "Layout/EmptyComment": null,
        "Layout/EmptyLineAfterGuardClause": null,
        "Layout/EmptyLineAfterMagicComment": null,
        "Layout/EmptyLineBetweenDefs": null,
        "Layout/EmptyLines": null,
        "Layout/EmptyLinesAroundAccessModifier": null,
        "Layout/EmptyLinesAroundArguments": null,
        "Layout/EmptyLinesAroundBeginBody": null,
        "Layout/EmptyLinesAroundBlockBody": null,
        "Layout/EmptyLinesAroundClassBody": null,
        "Layout/EmptyLinesAroundExceptionHandlingKeywords": null,
        "Layout/EmptyLinesAroundMethodBody": null,
        "Layout/EmptyLinesAroundModuleBody": null,
        "Layout/EndAlignment": null,
        "Layout/EndOfLine": null,
        "Layout/ExtraSpacing": null,
        "Layout/FirstArrayElementLineBreak": null,
        "Layout/FirstHashElementLineBreak": null,
        "Layout/FirstMethodArgumentLineBreak": null,
        "Layout/FirstMethodParameterLineBreak": null,
        "Layout/HeredocArgumentClosingParenthesis": null,
        "Layout/IndentAssignment": null,
        "Layout/IndentFirstArgument": null,
        "Layout/IndentFirstArrayElement": null,
        "Layout/IndentFirstHashElement": null,
        "Layout/IndentFirstParameter": null,
        "Layout/IndentHeredoc": null,
        "Layout/IndentationConsistency": null,
        "Layout/IndentationWidth": null,
        "Layout/InitialIndentation": null,
        "Layout/LeadingBlankLines": null,
        "Layout/LeadingCommentSpace": null,
        "Layout/MultilineArrayBraceLayout": null,
        "Layout/MultilineArrayLineBreaks": null,
        "Layout/MultilineAssignmentLayout": null,
        "Layout/MultilineBlockLayout": null,
        "Layout/MultilineHashBraceLayout": null,
        "Layout/MultilineHashKeyLineBreaks": null,
        "Layout/MultilineMethodArgumentLineBreaks": null,
        "Layout/MultilineMethodCallBraceLayout": null,
        "Layout/MultilineMethodCallIndentation": null,
        "Layout/MultilineMethodDefinitionBraceLayout": null,
        "Layout/MultilineOperationIndentation": null,
        "Layout/RescueEnsureAlignment": null,
        "Layout/SpaceAfterColon": null,
        "Layout/SpaceAfterComma": null,
        "Layout/SpaceAfterMethodName": null,
        "Layout/SpaceAfterNot": null,
        "Layout/SpaceAfterSemicolon": null,
        "Layout/SpaceAroundBlockParameters": null,
        "Layout/SpaceAroundEqualsInParameterDefault": null,
        "Layout/SpaceAroundKeyword": null,
        "Layout/SpaceAroundOperators": null,
        "Layout/SpaceBeforeBlockBraces": null,
        "Layout/SpaceBeforeComma": null,
        "Layout/SpaceBeforeComment": null,
        "Layout/SpaceBeforeFirstArg": null,
        "Layout/SpaceBeforeSemicolon": null,
        "Layout/SpaceInLambdaLiteral": null,
        "Layout/SpaceInsideArrayLiteralBrackets": null,
        "Layout/SpaceInsideArrayPercentLiteral": null,
        "Layout/SpaceInsideBlockBraces": null,
        "Layout/SpaceInsideHashLiteralBraces": null,
        "Layout/SpaceInsideParens": null,
        "Layout/SpaceInsidePercentLiteralDelimiters": null,
        "Layout/SpaceInsideRangeLiteral": null,
        "Layout/SpaceInsideReferenceBrackets": null,
        "Layout/SpaceInsideStringInterpolation": null,
        "Layout/Tab": null,
        "Layout/TrailingBlankLines": null,
        "Layout/TrailingWhitespace": null,
        "Lint/AmbiguousBlockAssociation": null,
        "Lint/AmbiguousOperator": null,
        "Lint/AmbiguousRegexpLiteral": null,
        "Lint/AssignmentInCondition": null,
        "Lint/BigDecimalNew": null,
        "Lint/BooleanSymbol": null,
        "Lint/CircularArgumentReference": null,
        "Lint/Debugger": null,
        "Lint/DeprecatedClassMethods": null,
        "Lint/DisjunctiveAssignmentInConstructor": null,
        "Lint/DuplicateCaseCondition": null,
        "Lint/DuplicateMethods": null,
        "Lint/DuplicatedKey": null,
        "Lint/EachWithObjectArgument": null,
        "Lint/ElseLayout": null,
        "Lint/EmptyEnsure": null,
        "Lint/EmptyExpression": null,
        "Lint/EmptyInterpolation": null,
        "Lint/EmptyWhen": null,
        "Lint/EndInMethod": null,
        "Lint/EnsureReturn": null,
        "Lint/ErbNewArguments": null,
        "Lint/FlipFlop": null,
        "Lint/FloatOutOfRange": null,
        "Lint/FormatParameterMismatch": null,
        "Lint/HandleExceptions": null,
        "Lint/HeredocMethodCallPosition": null,
        "Lint/ImplicitStringConcatenation": null,
        "Lint/IneffectiveAccessModifier": null,
        "Lint/InheritException": null,
        "Lint/InterpolationCheck": null,
        "Lint/LiteralAsCondition": null,
        "Lint/LiteralInInterpolation": null,
        "Lint/Loop": null,
        "Lint/MissingCopEnableDirective": null,
        "Lint/MultipleCompare": null,
        "Lint/NestedMethodDefinition": null,
        "Lint/NestedPercentLiteral": null,
        "Lint/NextWithoutAccumulator": null,
        "Lint/NonLocalExitFromIterator": null,
        "Lint/NumberConversion": null,
        "Lint/OrderedMagicComments": null,
        "Lint/ParenthesesAsGroupedExpression": null,
        "Lint/PercentStringArray": null,
        "Lint/PercentSymbolArray": null,
        "Lint/RandOne": null,
        "Lint/RedundantWithIndex": null,
        "Lint/RedundantWithObject": null,
        "Lint/RegexpAsCondition": null,
        "Lint/RequireParentheses": null,
        "Lint/RescueException": null,
        "Lint/RescueType": null,
        "Lint/ReturnInVoidContext": null,
        "Lint/SafeNavigationChain": null,
        "Lint/SafeNavigationConsistency": null,
        "Lint/SafeNavigationWithEmpty": null,
        "Lint/ScriptPermission": null,
        "Lint/ShadowedArgument": null,
        "Lint/ShadowedException": null,
        "Lint/ShadowingOuterLocalVariable": null,
        "Lint/StringConversionInInterpolation": null,
        "Lint/Syntax": null,
        "Lint/ToJSON": null,
        "Lint/UnderscorePrefixedVariableName": null,
        "Lint/UnifiedInteger": null,
        "Lint/UnneededCopDisableDirective": null,
        "Lint/UnneededCopEnableDirective": null,
        "Lint/UnneededRequireStatement": null,
        "Lint/UnneededSplatExpansion": null,
        "Lint/UnreachableCode": null,
        "Lint/UnusedBlockArgument": null,
        "Lint/UnusedMethodArgument": null,
        "Lint/UriEscapeUnescape": null,
        "Lint/UriRegexp": null,
        "Lint/UselessAccessModifier": null,
        "Lint/UselessAssignment": null,
        "Lint/UselessComparison": null,
        "Lint/UselessElseWithoutRescue": null,
        "Lint/UselessSetterCall": null,
        "Lint/Void": null,
        "Metrics/AbcSize": null,
        "Metrics/BlockLength": null,
        "Metrics/BlockNesting": null,
        "Metrics/ClassLength": null,
        "Metrics/CyclomaticComplexity": null,
        "Metrics/LineLength": null,
        "Metrics/MethodLength": null,
        "Metrics/ModuleLength": null,
        "Metrics/ParameterLists": null,
        "Metrics/PerceivedComplexity": null,
        "Naming/AccessorMethodName": null,
        "Naming/AsciiIdentifiers": null,
        "Naming/BinaryOperatorParameterName": null,
        "Naming/ClassAndModuleCamelCase": null,
        "Naming/ConstantName": null,
        "Naming/FileName": null,
        "Naming/HeredocDelimiterCase": null,
        "Naming/HeredocDelimiterNaming": null,
        "Naming/MemoizedInstanceVariableName": null,
        "Naming/MethodName": null,
        "Naming/PredicateName": null,
        "Naming/RescuedExceptionsVariableName": null,
        "Naming/UncommunicativeBlockParamName": null,
        "Naming/UncommunicativeMethodParamName": null,
        "Naming/VariableName": null,
        "Naming/VariableNumber": null,
        "Rails": null,
        "Security/Eval": null,
        "Security/JSONLoad": null,
        "Security/MarshalLoad": null,
        "Security/Open": null,
        "Security/YAMLLoad": null,
        "Style/AccessModifierDeclarations": null,
        "Style/Alias": null,
        "Style/AndOr": null,
        "Style/ArrayJoin": null,
        "Style/AsciiComments": null,
        "Style/Attr": null,
        "Style/AutoResourceCleanup": null,
        "Style/BarePercentLiterals": null,
        "Style/BeginBlock": null,
        "Style/BlockComments": null,
        "Style/BlockDelimiters": null,
        "Style/BracesAroundHashParameters": null,
        "Style/CaseEquality": null,
        "Style/CharacterLiteral": null,
        "Style/ClassAndModuleChildren": null,
        "Style/ClassCheck": null,
        "Style/ClassMethods": null,
        "Style/ClassVars": null,
        "Style/CollectionMethods": null,
        "Style/ColonMethodCall": null,
        "Style/ColonMethodDefinition": null,
        "Style/CommandLiteral": null,
        "Style/CommentAnnotation": null,
        "Style/CommentedKeyword": null,
        "Style/ConditionalAssignment": null,
        "Style/ConstantVisibility": null,
        "Style/Copyright": null,
        "Style/DateTime": null,
        "Style/DefWithParentheses": null,
        "Style/Dir": null,
        "Style/Documentation": null,
        "Style/DocumentationMethod": null,
        "Style/DoubleNegation": null,
        "Style/EachForSimpleLoop": null,
        "Style/EachWithObject": null,
        "Style/EmptyBlockParameter": null,
        "Style/EmptyCaseCondition": null,
        "Style/EmptyElse": null,
        "Style/EmptyLambdaParameter": null,
        "Style/EmptyLiteral": null,
        "Style/EmptyMethod": null,
        "Style/Encoding": null,
        "Style/EndBlock": null,
        "Style/EvalWithLocation": null,
        "Style/EvenOdd": null,
        "Style/ExpandPathArguments": null,
        "Style/For": null,
        "Style/FormatString": null,
        "Style/FormatStringToken": null,
        "Style/FrozenStringLiteralComment": null,
        "Style/GlobalVars": null,
        "Style/GuardClause": null,
        "Style/HashSyntax": null,
        "Style/IdenticalConditionalBranches": null,
        "Style/IfInsideElse": null,
        "Style/IfUnlessModifier": null,
        "Style/IfUnlessModifierOfIfUnless": null,
        "Style/IfWithSemicolon": null,
        "Style/ImplicitRuntimeError": null,
        "Style/InfiniteLoop": null,
        "Style/InlineComment": null,
        "Style/InverseMethods": null,
        "Style/IpAddresses": null,
        "Style/Lambda": null,
        "Style/LambdaCall": null,
        "Style/LineEndConcatenation": null,
        "Style/MethodCallWithArgsParentheses": null,
        "Style/MethodCallWithoutArgsParentheses": null,
        "Style/MethodCalledOnDoEndBlock": null,
        "Style/MethodDefParentheses": null,
        "Style/MethodMissingSuper": null,
        "Style/MinMax": null,
        "Style/MissingElse": null,
        "Style/MissingRespondToMissing": null,
        "Style/MixinGrouping": null,
        "Style/MixinUsage": null,
        "Style/ModuleFunction": null,
        "Style/MultilineBlockChain": null,
        "Style/MultilineIfModifier": null,
        "Style/MultilineIfThen": null,
        "Style/MultilineMemoization": null,
        "Style/MultilineMethodSignature": null,
        "Style/MultilineTernaryOperator": null,
        "Style/MultipleComparison": null,
        "Style/MutableConstant": null,
        "Style/NegatedIf": null,
        "Style/NegatedUnless": null,
        "Style/NegatedWhile": null,
        "Style/NestedModifier": null,
        "Style/NestedParenthesizedCalls": null,
        "Style/NestedTernaryOperator": null,
        "Style/Next": null,
        "Style/NilComparison": null,
        "Style/NonNilCheck": null,
        "Style/Not": null,
        "Style/NumericLiteralPrefix": null,
        "Style/NumericLiterals": null,
        "Style/NumericPredicate": null,
        "Style/OneLineConditional": null,
        "Style/OptionHash": null,
        "Style/OptionalArguments": null,
        "Style/OrAssignment": null,
        "Style/ParallelAssignment": null,
        "Style/ParenthesesAroundCondition": null,
        "Style/PercentLiteralDelimiters": null,
        "Style/PercentQLiterals": null,
        "Style/PerlBackrefs": null,
        "Style/PreferredHashMethods": null,
        "Style/Proc": null,
        "Style/RaiseArgs": null,
        "Style/RandomWithOffset": null,
        "Style/RedundantBegin": null,
        "Style/RedundantConditional": null,
        "Style/RedundantException": null,
        "Style/RedundantFreeze": null,
        "Style/RedundantParentheses": null,
        "Style/RedundantReturn": null,
        "Style/RedundantSelf": null,
        "Style/RedundantSortBy": null,
        "Style/RegexpLiteral": null,
        "Style/RescueModifier": null,
        "Style/RescueStandardError": null,
        "Style/ReturnNil": null,
        "Style/SafeNavigation": null,
        "Style/Sample": null,
        "Style/SelfAssignment": null,
        "Style/Semicolon": null,
        "Style/Send": null,
        "Style/SignalException": null,
        "Style/SingleLineBlockParams": null,
        "Style/SingleLineMethods": null,
        "Style/SpecialGlobalVars": null,
        "Style/StabbyLambdaParentheses": null,
        "Style/StderrPuts": null,
        "Style/StringHashKeys": null,
        "Style/StringLiterals": null,
        "Style/StringLiteralsInInterpolation": null,
        "Style/StringMethods": null,
        "Style/Strip": null,
        "Style/StructInheritance": null,
        "Style/SymbolArray": null,
        "Style/SymbolLiteral": null,
        "Style/SymbolProc": null,
        "Style/TernaryParentheses": null,
        "Style/TrailingBodyOnClass": null,
        "Style/TrailingBodyOnMethodDefinition": null,
        "Style/TrailingBodyOnModule": null,
        "Style/TrailingCommaInArguments": null,
        "Style/TrailingCommaInArrayLiteral": null,
        "Style/TrailingCommaInHashLiteral": null,
        "Style/TrailingMethodEndStatement": null,
        "Style/TrailingUnderscoreVariable": null,
        "Style/TrivialAccessors": null,
        "Style/UnlessElse": null,
        "Style/UnneededCapitalW": null,
        "Style/UnneededCondition": null,
        "Style/UnneededInterpolation": null,
        "Style/UnneededPercentQ": null,
        "Style/UnneededSort": null,
        "Style/UnpackFirst": null,
        "Style/VariableInterpolation": null,
        "Style/WhenThen": null,
        "Style/WhileUntilDo": null,
        "Style/WhileUntilModifier": null,
        "Style/WordArray": null,
        "Style/YodaCondition": null,
        "Style/ZeroLengthPredicate": null,
        "Rails/HelperInstanceVariable": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/helpers/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Do not use instance variables in helpers"
        }
      }
    }
  },
  {
    "version": "2.0.1",
    "diff": {
    }
  },
  {
    "version": "2.1.0",
    "diff": {
    }
  },
  {
    "version": "2.2.0",
    "diff": {
    }
  },
  {
    "version": "2.2.1",
    "diff": {
    }
  },
  {
    "version": "2.3.0",
    "diff": {
      "properties": {
        "Rails/ActiveRecordAliases": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/EnumHash": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer hash syntax over array syntax when defining enums."
        },
        "Rails/SaveBang": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        }
      }
    }
  },
  {
    "version": "2.3.1",
    "diff": {
    }
  },
  {
    "version": "2.3.2",
    "diff": {
    }
  },
  {
    "version": "2.4.0",
    "diff": {
      "properties": {
        "Rails/ApplicationController": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check that controllers subclass ApplicationController."
        },
        "Rails/ApplicationMailer": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Check that mailers subclass ApplicationMailer."
        },
        "Rails/FilePath": {
          "properties": {
            "EnforcedStyle": {
              "description": "Default: slashes"
            }
          }
        },
        "Rails/RakeEnvironment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: **/Rakefile, **/*.rake"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Set `:environment` task as a dependency to all rake task."
        },
        "Rails/SafeNavigationWithBlank": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Avoid `foo&.blank?` in conditionals."
        }
      }
    }
  },
  {
    "version": "2.4.1",
    "diff": {
      "properties": {
        "Rails/RakeEnvironment": {
          "description": "Include `:environment` as a dependency for all Rake tasks."
        }
      }
    }
  },
  {
    "version": "2.4.2",
    "diff": {
      "properties": {
        "inherit_mode": {
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "merge": {
              "type": "array",
              "description": "Default: Exclude"
            }
          }
        }
      }
    }
  },
  {
    "version": "2.5.0",
    "diff": {
      "properties": {
        "Rails/IndexBy": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer `index_by` over `each_with_object` or `map`."
        },
        "Rails/IndexWith": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Prefer `index_with` over `each_with_object` or `map`."
        },
        "Rails/RakeEnvironment": {
          "properties": {
            "Exclude": {
              "description": "Default: lib/capistrano/tasks/**/*.rake"
            }
          }
        },
        "Rails/RefuteMethods": {
          "properties": {
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: assert_not"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: assert_not, refute"
            }
          }
        },
        "Rails/UniqueValidationWithoutIndex": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/**/*.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "Uniqueness validation should be with a unique index."
        }
      }
    }
  },
  {
    "version": "2.5.1",
    "diff": {
      "properties": {
        "Rails/ApplicationController": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/ApplicationJob": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/ApplicationMailer": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/ApplicationRecord": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        }
      }
    }
  },
  {
    "version": "2.5.2",
    "diff": {
    }
  },
  {
    "version": "2.6.0",
    "diff": {
      "properties": {
        "Rails": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "'Rails' department (rails extension)"
        },
        "Rails/ActionFilter": {
          "properties": {
            "Include": {
              "description": "Default: app/controllers/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            },
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "action",
                "filter"
              ]
            }
          },
          "description": "This cop enforces the consistent use of action filter methods.\n\nThe cop is configurable and can enforce the use of the older something_filter methods or the newer something_action methods."
        },
        "Rails/ActiveRecordAliases": {
          "description": "Checks that ActiveRecord aliases are not used. The direct method names are more clear and easier to read."
        },
        "Rails/ActiveRecordOverride": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "Checks for overriding built-in Active Record methods instead of using callbacks."
        },
        "Rails/ActiveSupportAliases": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks that ActiveSupport aliases to core ruby methods are not used."
        },
        "Rails/ApplicationController": {
          "description": "This cop checks that controllers subclass ApplicationController."
        },
        "Rails/ApplicationJob": {
          "description": "This cop checks that jobs subclass ApplicationJob with Rails 5.0."
        },
        "Rails/ApplicationMailer": {
          "description": "This cop checks that mailers subclass ApplicationMailer with Rails 5.0."
        },
        "Rails/ApplicationRecord": {
          "description": "This cop checks that models subclass ApplicationRecord with Rails 5.0."
        },
        "Rails/AssertNot": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          }
        },
        "Rails/BelongsTo": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for belongs_to associations where we control whether the association is required via the deprecated `required` option instead.\n\nSince Rails 5, belongs_to associations are required by default and this can be controlled through the use of `optional: true`.\n\nFrom the release notes:\n\n  belongs_to will now trigger a validation error by default if the\n  association is not present. You can turn this off on a\n  per-association basis with optional: true. Also deprecate required\n  option in favor of optional for belongs_to. (Pull Request)\n\nIn the case that the developer is doing `required: false`, we definitely want to autocorrect to `optional: true`.\n\nHowever, without knowing whether they've set overridden the default value of `config.active_record.belongs_to_required_by_default`, we can't say whether it's safe to remove `required: true` or whether we should replace it with `optional: false` (or, similarly, remove a superfluous `optional: false`). Therefore, in the cases we're using `required: true`, we'll simply invert it to `optional: false` and the user can remove depending on their defaults."
        },
        "Rails/Blank": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for code that can be written with simpler conditionals using `Object#blank?` defined by Active Support.\n\nInteraction with `Style/UnlessElse`: The configuration of `NotPresent` will not produce an offense in the context of `unless else` if `Style/UnlessElse` is inabled. This is to prevent interference between the auto-correction of the two cops."
        },
        "Rails/BulkChangeTable": {
          "properties": {
            "Database": {
              "enum": [
                "mysql",
                "postgresql"
              ],
              "description": "Default: <none>"
            }
          },
          "description": "This Cop checks whether alter queries are combinable. If combinable queries are detected, it suggests to you to use `change_table` with `bulk: true` instead. This option causes the migration to generate a single ALTER TABLE statement combining multiple column alterations.\n\nThe `bulk` option is only supported on the MySQL and the PostgreSQL (5.2 later) adapter; thus it will automatically detect an adapter from `development` environment in `config/database.yml` when the `Database` option is not set. If the adapter is not `mysql2` or `postgresql`, this Cop ignores offenses."
        },
        "Rails/ContentTag": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            },
            "Reference": {
              "type": "array",
              "description": "Default: https://github.com/rails/rails/issues/25195, https://api.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag"
            }
          },
          "description": "This cop checks that `tag` is used instead of `content_tag` because `content_tag` is legacy syntax.\n\nAllow `content_tag` when the first argument is a variable because      `content_tag(name)` is simpler rather than `tag.public_send(name)`."
        },
        "Rails/CreateTableWithTimestamps": {
          "description": "This cop checks the migration for which timestamps are not included when creating a new table. In many cases, timestamps are useful information and should be added."
        },
        "Rails/Date": {
          "properties": {
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "strict",
                "flexible"
              ]
            }
          },
          "description": "This cop checks for the correct use of Date methods, such as Date.today, Date.current etc.\n\nUsing `Date.today` is dangerous, because it doesn't know anything about Rails time zone. You must use `Time.zone.today` instead.\n\nThe cop also reports warnings when you are using `to_time` method, because it doesn't know about Rails time zone either.\n\nTwo styles are supported for this cop. When EnforcedStyle is 'strict' then the Date methods `today`, `current`, `yesterday`, and `tomorrow` are prohibited and the usage of both `to_time` and 'to_time_in_current_zone' are reported as warning.\n\nWhen EnforcedStyle is 'flexible' then only `Date.today` is prohibited and only `to_time` is reported as warning."
        },
        "Rails/Delegate": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for delegations that could have been created automatically with the `delegate` method.\n\nSafe navigation `&.` is ignored because Rails' `allow_nil` option checks not just for nil but also delegates if nil responds to the delegated method.\n\nThe `EnforceForPrefixed` option (defaulted to `true`) means that using the target object as a prefix of the method name without using the `delegate` method will be a violation. When set to `false`, this case is legal."
        },
        "Rails/DelegateAllowBlank": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for delegations that pass :allow_blank as an option instead of :allow_nil. :allow_blank is not a valid option to pass to ActiveSupport#delegate."
        },
        "Rails/DynamicFindBy": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            },
            "AllowedMethods": {
              "type": "array",
              "description": "Default: find_by_sql"
            },
            "AllowedReceivers": {
              "type": "array",
              "description": "Default: Gem::Specification"
            }
          },
          "description": "This cop checks dynamic `find_by_*` methods. Use `find_by` instead of dynamic method. See. https://rails.rubystyle.guide#find_by"
        },
        "Rails/EnumHash": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for enums written with array syntax.\n\nWhen using array syntax, adding an element in a position other than the last causes all previous definitions to shift. Explicitly specifying the value for each key prevents this from happening."
        },
        "Rails/EnumUniqueness": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "This cop looks for duplicate values in enum declarations."
        },
        "Rails/EnvironmentComparison": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks that Rails.env is compared using `.production?`-like methods instead of equality against a string or symbol."
        },
        "Rails/Exit": {
          "properties": {
            "Exclude": {
              "description": "Default: lib/*/.rake"
            },
            "Include": {
              "description": "Default: app//.rb, config//.rb, lib/*/.rb"
            }
          },
          "description": "This cop enforces that `exit` calls are not used within a rails app. Valid options are instead to raise an error, break, return, or some other form of stopping execution of current request.\n\nThere are two obvious cases where `exit` is particularly harmful:\n\n - Usage in library code for your application. Even though Rails will\nrescue from a SystemExit and continue on, unit testing that library\ncode will result in specs exiting (potentially silently if exit(0)\nis used.)\n\n - Usage in application code outside of the web process could result in\nthe program exiting, which could result in the code failing to run and\ndo its job."
        },
        "Rails/FilePath": {
          "properties": {
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "slashes",
                "arguments"
              ]
            }
          },
          "description": "This cop is used to identify usages of file path joining process to use `Rails.root.join` clause. It is used to add uniformity when joining paths."
        },
        "Rails/FindBy": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop is used to identify usages of `where.first` and change them to use `find_by` instead."
        },
        "Rails/FindEach": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop is used to identify usages of `all.each` and change them to use `all.find_each` instead."
        },
        "Rails/HasAndBelongsToMany": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "This cop checks for the use of the has_and_belongs_to_many macro."
        },
        "Rails/HasManyOrHasOneDependent": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "This cop looks for `has_many` or `has_one` associations that don't specify a `:dependent` option. It doesn't register an offense if `:through` option was specified."
        },
        "Rails/HelperInstanceVariable": {
          "properties": {
            "Include": {
              "description": "Default: app/helpers/*/.rb"
            }
          },
          "description": "This cop checks for use of the helper methods which reference instance variables.\n\nRelying on instance variables makes it difficult to re-use helper methods.\n\nIf it seems awkward to explicitly pass in each dependent variable, consider moving the behaviour elsewhere, for example to a model, decorator or presenter."
        },
        "Rails/HttpPositionalArguments": {
          "properties": {
            "Include": {
              "description": "Default: spec//, test//"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop is used to identify usages of http methods like `get`, `post`, `put`, `patch` without the usage of keyword arguments in your tests and change them to use keyword args. This cop only applies to Rails >= 5. If you are running Rails < 5 you should disable the Rails/HttpPositionalArguments cop or set your TargetRailsVersion in your .rubocop.yml file to 4.2."
        },
        "Rails/HttpStatus": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            },
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "numeric",
                "symbolic"
              ]
            }
          }
        },
        "Rails/IgnoredSkipActionFilterOption": {
          "properties": {
            "Include": {
              "description": "Default: app/controllers/*/.rb"
            }
          },
          "description": "This cop checks that `if` and `only` (or `except`) are not used together as options of `skip_*` action filter.\n\nThe `if` option will be ignored when `if` and `only` are used together. Similarly, the `except` option will be ignored when `if` and `except` are used together."
        },
        "Rails/IndexBy": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for uses of `each_with_object({}) { ... }`, `map { ... }.to_h`, and `Hash[map { ... }]` that are transforming an enumerable into a hash where the values are the original elements. Rails provides the `index_by` method for this purpose."
        },
        "Rails/IndexWith": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for uses of `each_with_object({}) { ... }`, `map { ... }.to_h`, and `Hash[map { ... }]` that are transforming an enumerable into a hash where the keys are the original elements. Rails provides the `index_with` method for this purpose."
        },
        "Rails/InverseOf": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "This cop looks for has_(one|many) and belongs_to associations where Active Record can't automatically determine the inverse association because of a scope or the options used. Using the blog with order scope example below, traversing the a Blog's association in both directions with `blog.posts.first.blog` would cause the `blog` to be loaded from the database twice.\n\n`:inverse_of` must be manually specified for Active Record to use the associated object in memory, or set to `false` to opt-out. Note that setting `nil` does not stop Active Record from trying to determine the inverse automatically, and is not considered a valid value for this."
        },
        "Rails/LexicallyScopedActionFilter": {
          "properties": {
            "Include": {
              "description": "Default: app/controllers/*/.rb"
            }
          },
          "description": "This cop checks that methods specified in the filter's `only` or `except` options are defined within the same class or module.\n\nYou can technically specify methods of superclass or methods added by mixins on the filter, but these can confuse developers. If you specify methods that are defined in other classes or modules, you should define the filter in that class or module.\n\nIf you rely on behaviour defined in the superclass actions, you must remember to invoke `super` in the subclass actions."
        },
        "Rails/LinkToBlank": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for calls to `link_to` that contain a `target: '_blank'` but no `rel: 'noopener'`. This can be a security risk as the loaded page will have control over the previous page and could change its location for phishing purposes.\n\nThe option `rel: 'noreferrer'` also blocks this behavior and removes the http-referrer header."
        },
        "Rails/NotNullColumn": {
          "description": "This cop checks for add_column call with NOT NULL constraint in migration file."
        },
        "Rails/Output": {
          "properties": {
            "Include": {
              "description": "Default: app//.rb, config//.rb, db//.rb, lib//.rb"
            }
          },
          "description": "This cop checks for the use of output calls like puts and print"
        },
        "Rails/OutputSafety": {
          "description": "This cop checks for the use of output safety calls like `html_safe`, `raw`, and `safe_concat`. These methods do not escape content. They simply return a SafeBuffer containing the content as is. Instead, use `safe_join` to join content and escape it and concat to concatenate content and escape it, ensuring its safety."
        },
        "Rails/Pick": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop enforces the use `pick` over `pluck(...).first`."
        },
        "Rails/PluralizationGrammar": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for correct grammar when using ActiveSupport's core extensions to the numeric classes."
        },
        "Rails/Presence": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks code that can be written more easily using `Object#presence` defined by Active Support."
        },
        "Rails/Present": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for code that can be written with simpler conditionals using `Object#present?` defined by Active Support.\n\nInteraction with `Style/UnlessElse`: The configuration of `NotBlank` will not produce an offense in the context of `unless else` if `Style/UnlessElse` is inabled. This is to prevent interference between the auto-correction of the two cops."
        },
        "Rails/RakeEnvironment": {
          "properties": {
            "Exclude": {
              "description": "Default: lib/capistrano/tasks/*/.rake"
            }
          },
          "description": "This cop checks for Rake tasks without the `:environment` task dependency. The `:environment` task loads application code for other Rake tasks. Without it, tasks cannot make use of application code like models.\n\nYou can ignore the offense if the task satisfies at least one of the following conditions:\n\n - The task does not need application code.\n\n - The task invokes the :environment task."
        },
        "Rails/ReadWriteAttribute": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for the use of the `read_attribute` or `write_attribute` methods and recommends square brackets instead.\n\nIf an attribute is missing from the instance (for example, when initialized by a partial `select`) then `read_attribute` will return nil, but square brackets will raise an `ActiveModel::MissingAttributeError`.\n\nExplicitly raising an error in this situation is preferable, and that is why rubocop recommends using square brackets."
        },
        "Rails/RedundantAllowNil": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "Checks Rails model validations for a redundant `allow_nil` when `allow_blank` is present."
        },
        "Rails/RedundantForeignKey": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop detects cases where the `:foreign_key` option on associations is redundant."
        },
        "Rails/RedundantReceiverInWithOptions": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for redundant receiver in `with_options`. Receiver is implicit from Rails 4.2 or higher."
        },
        "Rails/ReflectionClassName": {
          "description": "This cop checks if the value of the option `class_name`, in the definition of a reflection is a string."
        },
        "Rails/RefuteMethods": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            },
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "assert_not",
                "refute"
              ]
            }
          }
        },
        "Rails/RelativeDateConstant": {
          "description": "This cop checks whether constant value isn't relative date. Because the relative date will be evaluated only once."
        },
        "Rails/RequestReferer": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            },
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "referer",
                "referrer"
              ]
            }
          },
          "description": "This cop checks for consistent uses of `request.referer` or `request.referrer`, depending on the cop's configuration."
        },
        "Rails/ReversibleMigration": {
          "description": "This cop checks whether the change method of the migration file is reversible."
        },
        "Rails/SafeNavigation": {
          "properties": {
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop converts usages of `try!` to `&.`. It can also be configured to convert `try`. It will convert code to use safe navigation."
        },
        "Rails/SafeNavigationWithBlank": {
          "description": "This cop checks to make sure safe navigation isn't used with `blank?` in a conditional.\n\nWhile the safe navigation operator is generally a good idea, when checking `foo&.blank?` in a conditional, `foo` being `nil` will actually do the opposite of what the author intends."
        },
        "Rails/SaveBang": {
          "properties": {
            "AllowedReceivers": {
              "description": "Default: []"
            }
          },
          "description": "This cop identifies possible cases where Active Record save! or related should be used instead of save because the model might have failed to save and an exception is better than unhandled failure.\n\nThis will allow:\n\n - update or save calls, assigned to a variable,\nor used as a condition in an if/unless/case statement.\n\n - create calls, assigned to a variable that then has a\ncall to persisted?, or whose return value is checked by\npersisted? immediately\n\n - calls if the result is explicitly returned from methods and blocks,\nor provided as arguments.\n\n - calls whose signature doesn’t look like an ActiveRecord\npersistence method.\n\nBy default it will also allow implicit returns from methods and blocks. that behavior can be turned off with `AllowImplicitReturn: false`.\n\nYou can permit receivers that are giving false positives with `AllowedReceivers: []`"
        },
        "Rails/ScopeArgs": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "This cop checks for scope calls where it was passed a method (usually a scope) instead of a lambda/proc."
        },
        "Rails/SkipsModelValidations": {
          "properties": {
            "Whitelist": {
              "description": "Default: []"
            }
          },
          "description": "This cop checks for the use of methods which skip validations which are listed in https://guides.rubyonrails.org/active_record_validations.html#skipping-validations\n\nMethods may be ignored from this rule by configuring a `Whitelist`."
        },
        "Rails/TimeZone": {
          "properties": {
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "strict",
                "flexible"
              ]
            }
          },
          "description": "This cop checks for the use of Time methods without zone.\n\nBuilt on top of Ruby on Rails style guide (https://rails.rubystyle.guide#time) and the article http://danilenko.org/2012/7/6/rails_timezones/\n\nTwo styles are supported for this cop. When EnforcedStyle is 'strict' then only use of Time.zone is allowed.\n\nWhen EnforcedStyle is 'flexible' then it's also allowed to use Time.in_time_zone."
        },
        "Rails/UniqBeforePluck": {
          "properties": {
            "EnforcedStyle": {
              "type": null,
              "enum": [
                "conservative",
                "aggressive"
              ]
            }
          },
          "description": "Prefer the use of distinct, before pluck instead of after.\n\nThe use of distinct before pluck is preferred because it executes within the database.\n\nThis cop has two different enforcement modes. When the EnforcedStyle is conservative (the default) then only calls to pluck on a constant (i.e. a model class) before distinct are added as offenses.\n\nWhen the EnforcedStyle is aggressive then all calls to pluck before distinct are added as offenses. This may lead to false positives as the cop cannot distinguish between calls to pluck on an ActiveRecord::Relation vs a call to pluck on an ActiveRecord::Associations::CollectionProxy.\n\nAutocorrect is disabled by default for this cop since it may generate false positives."
        },
        "Rails/UniqueValidationWithoutIndex": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            }
          },
          "description": "When you define a uniqueness validation in Active Record model, you also should add a unique index for the column. There are two reasons First, duplicated records may occur even if Active Record's validation is defined. Second, it will cause slow queries. The validation executes a `SELECT` statement with the target column when inserting/updating a record. If the column does not have an index and the table is large, the query will be heavy.\n\nNote that the cop does nothing if db/schema.rb does not exist."
        },
        "Rails/UnknownEnv": {
          "description": "This cop checks that environments called with `Rails.env` predicates exist."
        },
        "Rails/Validation": {
          "properties": {
            "Include": {
              "description": "Default: app/models/*/.rb"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks for the use of old-style attribute validation macros."
        },
        "Style/AndOr": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "EnforcedStyle": {
              "type": "string",
              "description": "Default: conditionals"
            }
          }
        }
      }
    }
  },
  {
    "version": "2.7.0",
    "diff": {
      "properties": {
        "Rails/ActiveRecordCallbacksOrder": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/models/*/.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop checks that Active Record callbacks are declared in the order in which they will be executed."
        },
        "Rails/DefaultScope": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "This cop looks for uses of `default_scope`."
        },
        "Rails/FindById": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop enforces that `ActiveRecord#find` is used instead of `where.take!`, `find_by!`, and `find_by_id!` to retrieve a single record by primary key when you expect it to be found."
        },
        "Rails/Inquiry": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "This cop checks that Active Support's `inquiry` method is not used."
        },
        "Rails/MailerName": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app/mailers/*/.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop enforces that mailer names end with `Mailer` suffix.\n\nWithout the `Mailer` suffix it isn't immediately apparent what's a mailer and which views are related to the mailer."
        },
        "Rails/MatchRoute": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: config/routes.rb, config/routes/*/.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop identifies places where defining routes with `match` can be replaced with a specific HTTP method.\n\nDon't use `match` to define any routes unless there is a need to map multiple request types among [:get, :post, :patch, :put, :delete] to a single action using the `:via` option."
        },
        "Rails/NegateInclude": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop enforces the use of `collection.exclude?(obj)` over `!collection.include?(obj)`."
        },
        "Rails/Pick": {
          "description": "This cop enforces the use of `pick` over `pluck(...).first`.\n\nUsing `pluck` followed by `first` creates an intermediate array, which `pick` avoids. When called on an Active Record relation, `pick` adds a limit to the query so that only one value is fetched from the database."
        },
        "Rails/Pluck": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop enforces the use of `pluck` over `map`.\n\n`pluck` can be used instead of `map` to extract a single key from each element in an enumerable. When called on an Active Record relation, it results in a more efficient query that only selects the necessary key."
        },
        "Rails/PluckId": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop enforces the use of `ids` over `pluck(:id)` and `pluck(primary_key)`."
        },
        "Rails/PluckInWhere": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop identifies places where `pluck` is used in `where` query methods and can be replaced with `select`.\n\nSince `pluck` is an eager method and hits the database immediately, using `select` helps to avoid additional database queries."
        },
        "Rails/RenderInline": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "This cop looks for inline rendering within controller actions."
        },
        "Rails/RenderPlainText": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            },
            "ContentTypeCompatibility": {
              "type": "boolean",
              "description": "Default: true"
            }
          },
          "description": "This cop identifies places where `render text:` can be replaced with `render plain:`."
        },
        "Rails/ShortI18n": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            },
            "EnforcedStyle": {
              "enum": [
                "conservative",
                "aggressive"
              ],
              "description": "Default: conservative"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: conservative, aggressive"
            }
          },
          "description": "This cop enforces that short forms of `I18n` methods are used: `t` instead of `translate` and `l` instead of `localize`.\n\nThis cop has two different enforcement modes. When the EnforcedStyle is conservative (the default) then only `I18n.translate` and `I18n.localize` calls are added as offenses.\n\nWhen the EnforcedStyle is aggressive then all `translate` and `localize` calls without a receiver are added as offenses."
        },
        "Rails/SkipsModelValidations": {
          "properties": {
            "Blacklist": null,
            "Whitelist": null,
            "ForbiddenMethods": {
              "type": "array",
              "description": "Default: decrement!, decrement_counter, increment!, increment_counter, insert, insert!, insert_all, insert_all!, toggle!, touch, touch_all, update_all, update_attribute, update_column, update_columns, update_counters, upsert, upsert_all"
            },
            "AllowedMethods": {
              "type": "array",
              "description": "Default: []"
            }
          }
        },
        "Rails/WhereExists": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop enforces the use of `exists?(...)` over `where(...).exists?`."
        }
      }
    }
  },
  {
    "version": "2.7.1",
    "diff": {
      "properties": {
        "Rails/PluckId": {
          "properties": {
            "Enabled": {
              "description": "Default: false"
            }
          }
        },
        "Rails/UnknownEnv": {
          "description": "This cop checks that environments called with `Rails.env` predicates exist. By default the cop allows three environments which Rails ships with: `development`, `test`, and `production`. More can be added to the `Environments` config parameter."
        }
      }
    }
  },
  {
    "version": "2.8.0",
    "diff": {
      "properties": {
        "Rails/AfterCommitOverride": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "This cop enforces that there is only one call to `after_commit` (and its aliases - `after_create_commit`, `after_update_commit`, and `after_destroy_commit`) with the same callback name per model."
        },
        "Rails/MailerName": {
          "properties": {
            "AutoCorrect": null,
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/OrderById": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            }
          },
          "description": "This cop checks for places where ordering by `id` column is used.\n\nDon't use the `id` column for ordering. The sequence of ids is not guaranteed to be in any particular order, despite often (incidentally) being chronological. Use a timestamp column to order chronologically. As a bonus the intent is clearer.\n\nMake sure the changed order column does not introduce performance bottlenecks and appropriate database indexes are added."
        },
        "Rails/PluckInWhere": {
          "properties": {
            "EnforcedStyle": {
              "enum": [
                "conservative",
                "aggressive"
              ],
              "description": "Default: conservative"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: conservative, aggressive"
            }
          },
          "description": "This cop identifies places where `pluck` is used in `where` query methods and can be replaced with `select`.\n\nSince `pluck` is an eager method and hits the database immediately, using `select` helps to avoid additional database queries.\n\nThis cop has two different enforcement modes. When the EnforcedStyle is conservative (the default) then only calls to `pluck` on a constant (i.e. a model class) in the `where` is used as offenses.\n\nWhen the EnforcedStyle is aggressive then all calls to `pluck` in the `where` is used as offenses. This may lead to false positives as the cop cannot replace to `select` between calls to `pluck` on an `ActiveRecord::Relation` instance vs a call to `pluck` on an `Array` instance."
        },
        "Rails/SquishedSQLHeredocs": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "Checks SQL heredocs to use `.squish`."
        },
        "Rails/UniqBeforePluck": {
          "properties": {
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Prefer the use of distinct, before pluck instead of after.\n\nThe use of distinct before pluck is preferred because it executes within the database.\n\nThis cop has two different enforcement modes. When the EnforcedStyle is conservative (the default) then only calls to pluck on a constant (i.e. a model class) before distinct are added as offenses.\n\nWhen the EnforcedStyle is aggressive then all calls to pluck before distinct are added as offenses. This may lead to false positives as the cop cannot distinguish between calls to pluck on an ActiveRecord::Relation vs a call to pluck on an ActiveRecord::Associations::CollectionProxy.\n\nThis cop is unsafe because the behavior may change depending on the database collation. Autocorrect is disabled by default for this cop since it may generate false positives."
        },
        "Rails/WhereExists": {
          "properties": {
            "EnforcedStyle": {
              "enum": [
                "exists",
                "where"
              ],
              "description": "Default: exists"
            },
            "SupportedStyles": {
              "type": "array",
              "description": "Default: exists, where"
            }
          },
          "description": "This cop enforces consistent style when using `exists?`.\n\nTwo styles are supported for this cop. When EnforcedStyle is 'exists' then the cop enforces `exists?(...)` over `where(...).exists?`.\n\nWhen EnforcedStyle is 'where' then the cop enforces `where(...).exists?` over `exists?(...)`."
        },
        "Rails/WhereNot": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop identifies places where manually constructed SQL in `where` can be replaced with `where.not(...)`."
        }
      }
    }
  },
  {
    "version": "2.8.1",
    "diff": {
    }
  },
  {
    "version": "2.9.0",
    "diff": {
      "properties": {
        "Rails/ArelStar": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: true"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop prevents usage of `\"*\"` on an Arel::Table column reference.\n\nUsing `arel_table[\"*\"]` causes the outputted string to be a literal quoted asterisk (e.g. <tt>`my_model`.`*`</tt>). This causes the database to look for a column named <tt>`*`</tt> (or `\"*\"`) as opposed to expanding the column list as one would likely expect."
        },
        "Rails/AttributeDefaultBlockValue": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: models/*/"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop looks for `attribute` class methods that specify a `:default` option which value is an array, string literal or method call without a block. It will accept all other values, such as string, symbol, integer and float literals as well as constants."
        },
        "Rails/FindEach": {
          "properties": {
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: order, limit, select, lock"
            }
          }
        },
        "Rails/NegateInclude": {
          "properties": {
            "AutoCorrect": null,
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop enforces the use of `collection.exclude?(obj)` over `!collection.include?(obj)`.\n\nIt is marked as unsafe by default because false positive will occur for a receiver object that do not have `exclude?` method. (e.g. `IPAddr`)"
        },
        "Rails/SkipsModelValidations": {
          "description": "This cop checks for the use of methods which skip validations which are listed in https://guides.rubyonrails.org/active_record_validations.html#skipping-validations\n\nMethods may be ignored from this rule by configuring a `AllowedMethods`."
        },
        "Rails/SquishedSQLHeredocs": {
          "properties": {
            "AutoCorrect": null,
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "Checks SQL heredocs to use `.squish`. Some SQL syntax (e.g. PostgreSQL comments and functions) requires newlines to be preserved in order to work, thus auto-correction for this cop is not safe."
        },
        "Rails/WhereEquals": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AutoCorrect": {
              "type": "boolean"
            }
          },
          "description": "This cop identifies places where manually constructed SQL in `where` can be replaced with `where(attribute: value)`."
        }
      }
    }
  },
  {
    "version": "2.9.1",
    "diff": {
      "properties": {
        "Rails/HelperInstanceVariable": {
          "description": "This cop checks for use of the helper methods which reference instance variables.\n\nRelying on instance variables makes it difficult to re-use helper methods.\n\nIf it seems awkward to explicitly pass in each dependent variable, consider moving the behaviour elsewhere, for example to a model, decorator or presenter.\n\nProvided that a class inherits `ActionView::Helpers::FormBuilder`, an offense will not be registered."
        }
      }
    }
  },
  {
    "version": "2.10.0",
    "diff": {
      "properties": {
        "Rails/Blank": {
          "properties": {
            "AutoCorrect": null,
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop checks for code that can be written with simpler conditionals using `Object#blank?` defined by Active Support.\n\nThis cop is marked as unsafe auto-correction, because `' '.empty?` returns false, but `' '.blank?` returns true. Therefore, auto-correction is not compatible if the receiver is a non-empty blank string, tab, or newline meta characters.\n\nInteraction with `Style/UnlessElse`: The configuration of `NotPresent` will not produce an offense in the context of `unless else` if `Style/UnlessElse` is inabled. This is to prevent interference between the auto-correction of the two cops."
        },
        "Rails/DynamicFindBy": {
          "properties": {
            "AutoCorrect": null,
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/EnvironmentVariableAccess": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: lib/*/.rake"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: app//.rb, lib//.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "AllowReads": {
              "type": "boolean",
              "description": "Default: false"
            },
            "AllowWrites": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop looks for direct access to environment variables through the `ENV` variable within the application code. This can lead to runtime errors due to misconfiguration that could have been discovered at boot time if the environment variables were loaded as part of initialization and copied into the application's configuration or secrets. The cop can be configured to allow either reads or writes if required."
        },
        "Rails/HasManyOrHasOneDependent": {
          "description": "This cop looks for `has_many` or `has_one` associations that don't specify a `:dependent` option.\n\nIt doesn't register an offense if `:through` or `dependent: nil` is specified, or if the model is read-only."
        },
        "Rails/ReflectionClassName": {
          "properties": {
            "Safe": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop checks if the value of the option `class_name`, in the definition of a reflection is a string. It is marked as unsafe because it cannot be determined whether constant or method return value specified to `class_name` is a string."
        },
        "Rails/RequireDependency": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://guides.rubyonrails.org/autoloading_and_reloading_constants.html"
            }
          },
          "description": "This cop checks for the usage of `require_dependency`.\n\n`require_dependency` is an obsolete method for Rails applications running in Zeitwerk mode. In Zeitwerk mode, the semantics should match Ruby's and no need to be defensive with load order, just refer to classes and modules normally. If the constant name is dynamic, camelize if needed, and constantize.\n\nApplications running in Zeitwerk mode should not use `require_dependency`.\n\nThis cop is disabled by default. Please enable it if you are using Zeitwerk mode."
        },
        "Rails/ReversibleMigrationMethodDefinition": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: false"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "include": {
              "type": "array",
              "description": "Default: db/migrate/*.rb"
            }
          },
          "description": "This cop checks whether the migration implements either a `change` method or both an `up` and a `down` method."
        },
        "Rails/TimeZone": {
          "properties": {
            "Exclude": {
              "description": "Default: */.gemspec"
            }
          }
        },
        "Rails/TimeZoneAssignment": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Default: pending"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles",
              "description": "Default: spec//.rb, test//.rb"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "Reference": {
              "type": "string",
              "description": "Default: https://thoughtbot.com/blog/its-about-time-zones"
            }
          },
          "description": "This cop checks for the use of `Time.zone=` method.\n\nThe `zone` attribute persists for the rest of the Ruby runtime, potentially causing unexpected behaviour at a later time. Using `Time.use_zone` ensures the code passed in block is the only place Time.zone is affected. It eliminates the possibility of a `zone` sticking around longer than intended."
        },
        "Rails/WhereEquals": {
          "properties": {
            "AutoCorrect": null,
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          }
        },
        "Rails/WhereExists": {
          "properties": {
            "AutoCorrect": null,
            "SafeAutoCorrect": {
              "type": "boolean",
              "description": "Default: false"
            }
          },
          "description": "This cop enforces consistent style when using `exists?`.\n\nTwo styles are supported for this cop. When EnforcedStyle is 'exists' then the cop enforces `exists?(...)` over `where(...).exists?`.\n\nWhen EnforcedStyle is 'where' then the cop enforces `where(...).exists?` over `exists?(...)`.\n\nThis cop is unsafe for auto-correction because the behavior may change on the following case:\n\nAuthor.includes(:articles).where(articles: {id: id}).exists? #=> Perform `eager_load` behavior (`LEFT JOIN` query) and get result.  Author.includes(:articles).exists?(articles: {id: id}) #=> Perform `preload` behavior and `ActiveRecord::StatementInvalid` error occurs."
        },
        "Lint/NumberConversion": {
          "type": "object",
          "additionalProperties": true,
          "propertyNames": {
            "$ref": "#/definitions/attributeName"
          },
          "properties": {
            "Enabled": {
              "type": "boolean"
            },
            "Exclude": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Include": {
              "$ref": "#/definitions/listOfFiles"
            },
            "Severity": {
              "$ref": "#/definitions/severity"
            },
            "Details": {
              "type": "string"
            },
            "StyleGuideBaseURL": {
              "type": "string"
            },
            "StyleGuide": {
              "type": "string"
            },
            "IgnoredMethods": {
              "type": "array",
              "description": "Default: ago, from_now, second, seconds, minute, minutes, hour, hours, day, days, week, weeks, fortnight, fortnights, in_milliseconds"
            }
          }
        }
      }
    }
  },
  {
    "version": "2.10.1",
    "diff": {
      "properties": {
        "Rails/ReversibleMigrationMethodDefinition": {
          "properties": {
            "include": null,
            "Include": {
              "description": "Default: db/migrate/*.rb"
            }
          }
        }
      }
    }
  }
]